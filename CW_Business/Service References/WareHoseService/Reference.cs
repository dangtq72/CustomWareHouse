//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CW_Business.WareHoseService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WareHoseService.CWContractService")]
    public interface CWContractService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/WareHouse_Search", ReplyAction="http://tempuri.org/CWContractService/WareHouse_SearchResponse")]
        byte[] WareHouse_Search(string p_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/WareHouse_Search", ReplyAction="http://tempuri.org/CWContractService/WareHouse_SearchResponse")]
        System.Threading.Tasks.Task<byte[]> WareHouse_SearchAsync(string p_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/WareHouse_Delete", ReplyAction="http://tempuri.org/CWContractService/WareHouse_DeleteResponse")]
        decimal WareHouse_Delete(decimal WareHouse_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/WareHouse_Delete", ReplyAction="http://tempuri.org/CWContractService/WareHouse_DeleteResponse")]
        System.Threading.Tasks.Task<decimal> WareHouse_DeleteAsync(decimal WareHouse_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/WareHouse_Insert", ReplyAction="http://tempuri.org/CWContractService/WareHouse_InsertResponse")]
        decimal WareHouse_Insert(string WareHouse_Code, string WareHouse_Name, string Location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/WareHouse_Insert", ReplyAction="http://tempuri.org/CWContractService/WareHouse_InsertResponse")]
        System.Threading.Tasks.Task<decimal> WareHouse_InsertAsync(string WareHouse_Code, string WareHouse_Name, string Location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/WareHouse_Update", ReplyAction="http://tempuri.org/CWContractService/WareHouse_UpdateResponse")]
        bool WareHouse_Update(decimal WareHouse_Id, string WareHous_Name, string Location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/WareHouse_Update", ReplyAction="http://tempuri.org/CWContractService/WareHouse_UpdateResponse")]
        System.Threading.Tasks.Task<bool> WareHouse_UpdateAsync(decimal WareHouse_Id, string WareHous_Name, string Location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/BUSINESS_GET_ALL", ReplyAction="http://tempuri.org/CWContractService/BUSINESS_GET_ALLResponse")]
        byte[] BUSINESS_GET_ALL();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/BUSINESS_GET_ALL", ReplyAction="http://tempuri.org/CWContractService/BUSINESS_GET_ALLResponse")]
        System.Threading.Tasks.Task<byte[]> BUSINESS_GET_ALLAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Category_GetAll", ReplyAction="http://tempuri.org/CWContractService/Category_GetAllResponse")]
        byte[] Category_GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Category_GetAll", ReplyAction="http://tempuri.org/CWContractService/Category_GetAllResponse")]
        System.Threading.Tasks.Task<byte[]> Category_GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Category_GetById", ReplyAction="http://tempuri.org/CWContractService/Category_GetByIdResponse")]
        byte[] Category_GetById(decimal Category_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Category_GetById", ReplyAction="http://tempuri.org/CWContractService/Category_GetByIdResponse")]
        System.Threading.Tasks.Task<byte[]> Category_GetByIdAsync(decimal Category_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Category_GetByCode", ReplyAction="http://tempuri.org/CWContractService/Category_GetByCodeResponse")]
        byte[] Category_GetByCode(string Category_Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Category_GetByCode", ReplyAction="http://tempuri.org/CWContractService/Category_GetByCodeResponse")]
        System.Threading.Tasks.Task<byte[]> Category_GetByCodeAsync(string Category_Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Category_Search", ReplyAction="http://tempuri.org/CWContractService/Category_SearchResponse")]
        byte[] Category_Search(string p_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Category_Search", ReplyAction="http://tempuri.org/CWContractService/Category_SearchResponse")]
        System.Threading.Tasks.Task<byte[]> Category_SearchAsync(string p_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Category_Delete", ReplyAction="http://tempuri.org/CWContractService/Category_DeleteResponse")]
        decimal Category_Delete(decimal Category_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Category_Delete", ReplyAction="http://tempuri.org/CWContractService/Category_DeleteResponse")]
        System.Threading.Tasks.Task<decimal> Category_DeleteAsync(decimal Category_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Category_Insert", ReplyAction="http://tempuri.org/CWContractService/Category_InsertResponse")]
        bool Category_Insert(string Category_Code, string Category_Name, string Unit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Category_Insert", ReplyAction="http://tempuri.org/CWContractService/Category_InsertResponse")]
        System.Threading.Tasks.Task<bool> Category_InsertAsync(string Category_Code, string Category_Name, string Unit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Category_Update", ReplyAction="http://tempuri.org/CWContractService/Category_UpdateResponse")]
        bool Category_Update(decimal Category_Id, string Category_Name, string Unit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Category_Update", ReplyAction="http://tempuri.org/CWContractService/Category_UpdateResponse")]
        System.Threading.Tasks.Task<bool> Category_UpdateAsync(decimal Category_Id, string Category_Name, string Unit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/DBMem_Get_HashInfo", ReplyAction="http://tempuri.org/CWContractService/DBMem_Get_HashInfoResponse")]
        byte[] DBMem_Get_HashInfo(string strhashName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/DBMem_Get_HashInfo", ReplyAction="http://tempuri.org/CWContractService/DBMem_Get_HashInfoResponse")]
        System.Threading.Tasks.Task<byte[]> DBMem_Get_HashInfoAsync(string strhashName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/FunctionsGetAll", ReplyAction="http://tempuri.org/CWContractService/FunctionsGetAllResponse")]
        byte[] FunctionsGetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/FunctionsGetAll", ReplyAction="http://tempuri.org/CWContractService/FunctionsGetAllResponse")]
        System.Threading.Tasks.Task<byte[]> FunctionsGetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/GetUserFuncByUserID", ReplyAction="http://tempuri.org/CWContractService/GetUserFuncByUserIDResponse")]
        byte[] GetUserFuncByUserID(decimal pIdUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/GetUserFuncByUserID", ReplyAction="http://tempuri.org/CWContractService/GetUserFuncByUserIDResponse")]
        System.Threading.Tasks.Task<byte[]> GetUserFuncByUserIDAsync(decimal pIdUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/FunctionsGetBy_Type", ReplyAction="http://tempuri.org/CWContractService/FunctionsGetBy_TypeResponse")]
        byte[] FunctionsGetBy_Type(string p_func_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/FunctionsGetBy_Type", ReplyAction="http://tempuri.org/CWContractService/FunctionsGetBy_TypeResponse")]
        System.Threading.Tasks.Task<byte[]> FunctionsGetBy_TypeAsync(string p_func_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/FunctionInGroupsGetAll", ReplyAction="http://tempuri.org/CWContractService/FunctionInGroupsGetAllResponse")]
        byte[] FunctionInGroupsGetAll(decimal pIdGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/FunctionInGroupsGetAll", ReplyAction="http://tempuri.org/CWContractService/FunctionInGroupsGetAllResponse")]
        System.Threading.Tasks.Task<byte[]> FunctionInGroupsGetAllAsync(decimal pIdGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/FunctionGroupsGetAll", ReplyAction="http://tempuri.org/CWContractService/FunctionGroupsGetAllResponse")]
        byte[] FunctionGroupsGetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/FunctionGroupsGetAll", ReplyAction="http://tempuri.org/CWContractService/FunctionGroupsGetAllResponse")]
        System.Threading.Tasks.Task<byte[]> FunctionGroupsGetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/FunctionNotInGroupsGetAll", ReplyAction="http://tempuri.org/CWContractService/FunctionNotInGroupsGetAllResponse")]
        byte[] FunctionNotInGroupsGetAll(decimal pIdGroup, decimal pIdUser, decimal pCreateOwner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/FunctionNotInGroupsGetAll", ReplyAction="http://tempuri.org/CWContractService/FunctionNotInGroupsGetAllResponse")]
        System.Threading.Tasks.Task<byte[]> FunctionNotInGroupsGetAllAsync(decimal pIdGroup, decimal pIdUser, decimal pCreateOwner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/FunctionNotInGroupsByAppGetAll", ReplyAction="http://tempuri.org/CWContractService/FunctionNotInGroupsByAppGetAllResponse")]
        byte[] FunctionNotInGroupsByAppGetAll(decimal pIdGroup, decimal pIdUser, decimal pCreateOwner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/FunctionNotInGroupsByAppGetAll", ReplyAction="http://tempuri.org/CWContractService/FunctionNotInGroupsByAppGetAllResponse")]
        System.Threading.Tasks.Task<byte[]> FunctionNotInGroupsByAppGetAllAsync(decimal pIdGroup, decimal pIdUser, decimal pCreateOwner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/GroupFunctionInsert", ReplyAction="http://tempuri.org/CWContractService/GroupFunctionInsertResponse")]
        decimal GroupFunctionInsert(decimal p_id_group, string p_lst_function, string p_createby, System.DateTime p_createdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/GroupFunctionInsert", ReplyAction="http://tempuri.org/CWContractService/GroupFunctionInsertResponse")]
        System.Threading.Tasks.Task<decimal> GroupFunctionInsertAsync(decimal p_id_group, string p_lst_function, string p_createby, System.DateTime p_createdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/GroupInfoGetAll", ReplyAction="http://tempuri.org/CWContractService/GroupInfoGetAllResponse")]
        byte[] GroupInfoGetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/GroupInfoGetAll", ReplyAction="http://tempuri.org/CWContractService/GroupInfoGetAllResponse")]
        System.Threading.Tasks.Task<byte[]> GroupInfoGetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/GroupInfoInsert", ReplyAction="http://tempuri.org/CWContractService/GroupInfoInsertResponse")]
        decimal GroupInfoInsert(string p_name, string p_note, string p_createby, System.DateTime p_createdate, decimal pIdUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/GroupInfoInsert", ReplyAction="http://tempuri.org/CWContractService/GroupInfoInsertResponse")]
        System.Threading.Tasks.Task<decimal> GroupInfoInsertAsync(string p_name, string p_note, string p_createby, System.DateTime p_createdate, decimal pIdUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/GroupInfoUpdate", ReplyAction="http://tempuri.org/CWContractService/GroupInfoUpdateResponse")]
        decimal GroupInfoUpdate(decimal p_id, string p_name, string p_note, string p_modifiedby, System.DateTime p_modifieddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/GroupInfoUpdate", ReplyAction="http://tempuri.org/CWContractService/GroupInfoUpdateResponse")]
        System.Threading.Tasks.Task<decimal> GroupInfoUpdateAsync(decimal p_id, string p_name, string p_note, string p_modifiedby, System.DateTime p_modifieddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/GroupInfoDelete", ReplyAction="http://tempuri.org/CWContractService/GroupInfoDeleteResponse")]
        decimal GroupInfoDelete(decimal pId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/GroupInfoDelete", ReplyAction="http://tempuri.org/CWContractService/GroupInfoDeleteResponse")]
        System.Threading.Tasks.Task<decimal> GroupInfoDeleteAsync(decimal pId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/GroupUserGetByUserID", ReplyAction="http://tempuri.org/CWContractService/GroupUserGetByUserIDResponse")]
        byte[] GroupUserGetByUserID(decimal pIdUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/GroupUserGetByUserID", ReplyAction="http://tempuri.org/CWContractService/GroupUserGetByUserIDResponse")]
        System.Threading.Tasks.Task<byte[]> GroupUserGetByUserIDAsync(decimal pIdUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/GroupUserGetNotInUserID", ReplyAction="http://tempuri.org/CWContractService/GroupUserGetNotInUserIDResponse")]
        byte[] GroupUserGetNotInUserID(decimal pIdUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/GroupUserGetNotInUserID", ReplyAction="http://tempuri.org/CWContractService/GroupUserGetNotInUserIDResponse")]
        System.Threading.Tasks.Task<byte[]> GroupUserGetNotInUserIDAsync(decimal pIdUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/GroupUserInsert", ReplyAction="http://tempuri.org/CWContractService/GroupUserInsertResponse")]
        decimal GroupUserInsert(decimal p_id_user, decimal p_id_group, string p_createby, System.DateTime p_createdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/GroupUserInsert", ReplyAction="http://tempuri.org/CWContractService/GroupUserInsertResponse")]
        System.Threading.Tasks.Task<decimal> GroupUserInsertAsync(decimal p_id_user, decimal p_id_group, string p_createby, System.DateTime p_createdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/GroupUserDeleted", ReplyAction="http://tempuri.org/CWContractService/GroupUserDeletedResponse")]
        decimal GroupUserDeleted(decimal pIdUser, decimal pIdGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/GroupUserDeleted", ReplyAction="http://tempuri.org/CWContractService/GroupUserDeletedResponse")]
        System.Threading.Tasks.Task<decimal> GroupUserDeletedAsync(decimal pIdUser, decimal pIdGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/GetUserOfGroupByIDGroup", ReplyAction="http://tempuri.org/CWContractService/GetUserOfGroupByIDGroupResponse")]
        byte[] GetUserOfGroupByIDGroup(decimal pIDGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/GetUserOfGroupByIDGroup", ReplyAction="http://tempuri.org/CWContractService/GetUserOfGroupByIDGroupResponse")]
        System.Threading.Tasks.Task<byte[]> GetUserOfGroupByIDGroupAsync(decimal pIDGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserInfo_GetById", ReplyAction="http://tempuri.org/CWContractService/UserInfo_GetByIdResponse")]
        byte[] UserInfo_GetById(decimal p_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserInfo_GetById", ReplyAction="http://tempuri.org/CWContractService/UserInfo_GetByIdResponse")]
        System.Threading.Tasks.Task<byte[]> UserInfo_GetByIdAsync(decimal p_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserInfo_GetByType", ReplyAction="http://tempuri.org/CWContractService/UserInfo_GetByTypeResponse")]
        byte[] UserInfo_GetByType(decimal p_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserInfo_GetByType", ReplyAction="http://tempuri.org/CWContractService/UserInfo_GetByTypeResponse")]
        System.Threading.Tasks.Task<byte[]> UserInfo_GetByTypeAsync(decimal p_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserInfo_GetByName", ReplyAction="http://tempuri.org/CWContractService/UserInfo_GetByNameResponse")]
        byte[] UserInfo_GetByName(string p_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserInfo_GetByName", ReplyAction="http://tempuri.org/CWContractService/UserInfo_GetByNameResponse")]
        System.Threading.Tasks.Task<byte[]> UserInfo_GetByNameAsync(string p_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserInfo_Search", ReplyAction="http://tempuri.org/CWContractService/UserInfo_SearchResponse")]
        CW_Business.WareHoseService.UserInfo_SearchResponse UserInfo_Search(CW_Business.WareHoseService.UserInfo_SearchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserInfo_Search", ReplyAction="http://tempuri.org/CWContractService/UserInfo_SearchResponse")]
        System.Threading.Tasks.Task<CW_Business.WareHoseService.UserInfo_SearchResponse> UserInfo_SearchAsync(CW_Business.WareHoseService.UserInfo_SearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserInfo_Insert", ReplyAction="http://tempuri.org/CWContractService/UserInfo_InsertResponse")]
        decimal UserInfo_Insert(string user_name, string password, string fullname, decimal Custom_Id, decimal user_type, decimal status, string Phone, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserInfo_Insert", ReplyAction="http://tempuri.org/CWContractService/UserInfo_InsertResponse")]
        System.Threading.Tasks.Task<decimal> UserInfo_InsertAsync(string user_name, string password, string fullname, decimal Custom_Id, decimal user_type, decimal status, string Phone, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserInfo_SetPassword", ReplyAction="http://tempuri.org/CWContractService/UserInfo_SetPasswordResponse")]
        decimal UserInfo_SetPassword(int p_user_id, int p_status, string p_password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserInfo_SetPassword", ReplyAction="http://tempuri.org/CWContractService/UserInfo_SetPasswordResponse")]
        System.Threading.Tasks.Task<decimal> UserInfo_SetPasswordAsync(int p_user_id, int p_status, string p_password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserInfo_SetStatus", ReplyAction="http://tempuri.org/CWContractService/UserInfo_SetStatusResponse")]
        decimal UserInfo_SetStatus(int p_user_id, int p_status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserInfo_SetStatus", ReplyAction="http://tempuri.org/CWContractService/UserInfo_SetStatusResponse")]
        System.Threading.Tasks.Task<decimal> UserInfo_SetStatusAsync(int p_user_id, int p_status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserInfo_Delete", ReplyAction="http://tempuri.org/CWContractService/UserInfo_DeleteResponse")]
        decimal UserInfo_Delete(int p_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserInfo_Delete", ReplyAction="http://tempuri.org/CWContractService/UserInfo_DeleteResponse")]
        System.Threading.Tasks.Task<decimal> UserInfo_DeleteAsync(int p_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserInfo_Update_Pass", ReplyAction="http://tempuri.org/CWContractService/UserInfo_Update_PassResponse")]
        decimal UserInfo_Update_Pass(int p_user_id, string p_pass, System.DateTime p_last_pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserInfo_Update_Pass", ReplyAction="http://tempuri.org/CWContractService/UserInfo_Update_PassResponse")]
        System.Threading.Tasks.Task<decimal> UserInfo_Update_PassAsync(int p_user_id, string p_pass, System.DateTime p_last_pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserFunctionInsert", ReplyAction="http://tempuri.org/CWContractService/UserFunctionInsertResponse")]
        decimal UserFunctionInsert(decimal p_id_user, decimal p_func_id, string p_lst_function, decimal p_id_group, string p_created_by);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserFunctionInsert", ReplyAction="http://tempuri.org/CWContractService/UserFunctionInsertResponse")]
        System.Threading.Tasks.Task<decimal> UserFunctionInsertAsync(decimal p_id_user, decimal p_func_id, string p_lst_function, decimal p_id_group, string p_created_by);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserFunctionDeleted", ReplyAction="http://tempuri.org/CWContractService/UserFunctionDeletedResponse")]
        decimal UserFunctionDeleted(decimal p_id_user, decimal p_id_function, decimal p_id_group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserFunctionDeleted", ReplyAction="http://tempuri.org/CWContractService/UserFunctionDeletedResponse")]
        System.Threading.Tasks.Task<decimal> UserFunctionDeletedAsync(decimal p_id_user, decimal p_id_function, decimal p_id_group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserFunctionGetAll", ReplyAction="http://tempuri.org/CWContractService/UserFunctionGetAllResponse")]
        byte[] UserFunctionGetAll(decimal pIdUser, decimal pIdGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UserFunctionGetAll", ReplyAction="http://tempuri.org/CWContractService/UserFunctionGetAllResponse")]
        System.Threading.Tasks.Task<byte[]> UserFunctionGetAllAsync(decimal pIdUser, decimal pIdGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Custom_GetAll", ReplyAction="http://tempuri.org/CWContractService/Custom_GetAllResponse")]
        byte[] Custom_GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Custom_GetAll", ReplyAction="http://tempuri.org/CWContractService/Custom_GetAllResponse")]
        System.Threading.Tasks.Task<byte[]> Custom_GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Custom_Insert", ReplyAction="http://tempuri.org/CWContractService/Custom_InsertResponse")]
        decimal Custom_Insert(string Custom_Name, string Location, string Note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Custom_Insert", ReplyAction="http://tempuri.org/CWContractService/Custom_InsertResponse")]
        System.Threading.Tasks.Task<decimal> Custom_InsertAsync(string Custom_Name, string Location, string Note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Custom_Delete", ReplyAction="http://tempuri.org/CWContractService/Custom_DeleteResponse")]
        decimal Custom_Delete(decimal Custom_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Custom_Delete", ReplyAction="http://tempuri.org/CWContractService/Custom_DeleteResponse")]
        System.Threading.Tasks.Task<decimal> Custom_DeleteAsync(decimal Custom_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/User_WareHouse_GetByUser", ReplyAction="http://tempuri.org/CWContractService/User_WareHouse_GetByUserResponse")]
        byte[] User_WareHouse_GetByUser(decimal p_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/User_WareHouse_GetByUser", ReplyAction="http://tempuri.org/CWContractService/User_WareHouse_GetByUserResponse")]
        System.Threading.Tasks.Task<byte[]> User_WareHouse_GetByUserAsync(decimal p_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/User_WareHouse_Insert", ReplyAction="http://tempuri.org/CWContractService/User_WareHouse_InsertResponse")]
        bool User_WareHouse_Insert(decimal p_user_id, decimal p_warehouse_id, string p_created_by, System.DateTime p_created_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/User_WareHouse_Insert", ReplyAction="http://tempuri.org/CWContractService/User_WareHouse_InsertResponse")]
        System.Threading.Tasks.Task<bool> User_WareHouse_InsertAsync(decimal p_user_id, decimal p_warehouse_id, string p_created_by, System.DateTime p_created_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/WareHouse_DeleteByUser", ReplyAction="http://tempuri.org/CWContractService/WareHouse_DeleteByUserResponse")]
        decimal WareHouse_DeleteByUser(decimal p_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/WareHouse_DeleteByUser", ReplyAction="http://tempuri.org/CWContractService/WareHouse_DeleteByUserResponse")]
        System.Threading.Tasks.Task<decimal> WareHouse_DeleteByUserAsync(decimal p_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Product_GetAll", ReplyAction="http://tempuri.org/CWContractService/Product_GetAllResponse")]
        byte[] Product_GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Product_GetAll", ReplyAction="http://tempuri.org/CWContractService/Product_GetAllResponse")]
        System.Threading.Tasks.Task<byte[]> Product_GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Product_GetById", ReplyAction="http://tempuri.org/CWContractService/Product_GetByIdResponse")]
        byte[] Product_GetById(decimal Product_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Product_GetById", ReplyAction="http://tempuri.org/CWContractService/Product_GetByIdResponse")]
        System.Threading.Tasks.Task<byte[]> Product_GetByIdAsync(decimal Product_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Product_GetByCode", ReplyAction="http://tempuri.org/CWContractService/Product_GetByCodeResponse")]
        byte[] Product_GetByCode(string Product_Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Product_GetByCode", ReplyAction="http://tempuri.org/CWContractService/Product_GetByCodeResponse")]
        System.Threading.Tasks.Task<byte[]> Product_GetByCodeAsync(string Product_Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Product_Delete", ReplyAction="http://tempuri.org/CWContractService/Product_DeleteResponse")]
        decimal Product_Delete(decimal Product_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Product_Delete", ReplyAction="http://tempuri.org/CWContractService/Product_DeleteResponse")]
        System.Threading.Tasks.Task<decimal> Product_DeleteAsync(decimal Product_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Product_Search", ReplyAction="http://tempuri.org/CWContractService/Product_SearchResponse")]
        byte[] Product_Search(string p_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Product_Search", ReplyAction="http://tempuri.org/CWContractService/Product_SearchResponse")]
        System.Threading.Tasks.Task<byte[]> Product_SearchAsync(string p_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Product_Insert", ReplyAction="http://tempuri.org/CWContractService/Product_InsertResponse")]
        bool Product_Insert(string Product_Code, string Product_Name, decimal Category_Id, string Unit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Product_Insert", ReplyAction="http://tempuri.org/CWContractService/Product_InsertResponse")]
        System.Threading.Tasks.Task<bool> Product_InsertAsync(string Product_Code, string Product_Name, decimal Category_Id, string Unit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Product_Update", ReplyAction="http://tempuri.org/CWContractService/Product_UpdateResponse")]
        bool Product_Update(decimal Product_Id, string Product_Name, decimal Category_Id, string Unit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Product_Update", ReplyAction="http://tempuri.org/CWContractService/Product_UpdateResponse")]
        System.Threading.Tasks.Task<bool> Product_UpdateAsync(decimal Product_Id, string Product_Name, decimal Category_Id, string Unit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Product_Declaration_GetById", ReplyAction="http://tempuri.org/CWContractService/Product_Declaration_GetByIdResponse")]
        byte[] Product_Declaration_GetById(decimal Product_Declaration_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Product_Declaration_GetById", ReplyAction="http://tempuri.org/CWContractService/Product_Declaration_GetByIdResponse")]
        System.Threading.Tasks.Task<byte[]> Product_Declaration_GetByIdAsync(decimal Product_Declaration_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Delete_Product_Declaration_ById", ReplyAction="http://tempuri.org/CWContractService/Delete_Product_Declaration_ByIdResponse")]
        bool Delete_Product_Declaration_ById(decimal Product_Declaration_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Delete_Product_Declaration_ById", ReplyAction="http://tempuri.org/CWContractService/Delete_Product_Declaration_ByIdResponse")]
        System.Threading.Tasks.Task<bool> Delete_Product_Declaration_ByIdAsync(decimal Product_Declaration_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Delete_Product_Declaration_ByDeclaration_Id", ReplyAction="http://tempuri.org/CWContractService/Delete_Product_Declaration_ByDeclaration_IdR" +
            "esponse")]
        bool Delete_Product_Declaration_ByDeclaration_Id(decimal Declaration_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Delete_Product_Declaration_ByDeclaration_Id", ReplyAction="http://tempuri.org/CWContractService/Delete_Product_Declaration_ByDeclaration_IdR" +
            "esponse")]
        System.Threading.Tasks.Task<bool> Delete_Product_Declaration_ByDeclaration_IdAsync(decimal Declaration_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Product_Declaration_Insert", ReplyAction="http://tempuri.org/CWContractService/Product_Declaration_InsertResponse")]
        bool Product_Declaration_Insert(decimal Product_Id, decimal Declaration_Id, decimal Type, string Unit, string Made_In, decimal Wrong_Number, decimal Package_Quantity, decimal Quantity, decimal Value, decimal Package_Quantity_Delivery, decimal Quantity_Delivery, decimal Declaration_Reference_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Product_Declaration_Insert", ReplyAction="http://tempuri.org/CWContractService/Product_Declaration_InsertResponse")]
        System.Threading.Tasks.Task<bool> Product_Declaration_InsertAsync(decimal Product_Id, decimal Declaration_Id, decimal Type, string Unit, string Made_In, decimal Wrong_Number, decimal Package_Quantity, decimal Quantity, decimal Value, decimal Package_Quantity_Delivery, decimal Quantity_Delivery, decimal Declaration_Reference_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UpdateQuantity_Delivery", ReplyAction="http://tempuri.org/CWContractService/UpdateQuantity_DeliveryResponse")]
        bool UpdateQuantity_Delivery(decimal Product_Declaration_Id, decimal Package_Quantity_Delivery, decimal Quantity_Delivery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/UpdateQuantity_Delivery", ReplyAction="http://tempuri.org/CWContractService/UpdateQuantity_DeliveryResponse")]
        System.Threading.Tasks.Task<bool> UpdateQuantity_DeliveryAsync(decimal Product_Declaration_Id, decimal Package_Quantity_Delivery, decimal Quantity_Delivery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Declaration_GetAll", ReplyAction="http://tempuri.org/CWContractService/Declaration_GetAllResponse")]
        byte[] Declaration_GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Declaration_GetAll", ReplyAction="http://tempuri.org/CWContractService/Declaration_GetAllResponse")]
        System.Threading.Tasks.Task<byte[]> Declaration_GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Declaration_GetByCode", ReplyAction="http://tempuri.org/CWContractService/Declaration_GetByCodeResponse")]
        byte[] Declaration_GetByCode(string p_Declaration_Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Declaration_GetByCode", ReplyAction="http://tempuri.org/CWContractService/Declaration_GetByCodeResponse")]
        System.Threading.Tasks.Task<byte[]> Declaration_GetByCodeAsync(string p_Declaration_Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Declaration_GetByContract", ReplyAction="http://tempuri.org/CWContractService/Declaration_GetByContractResponse")]
        byte[] Declaration_GetByContract(decimal p_Contract_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Declaration_GetByContract", ReplyAction="http://tempuri.org/CWContractService/Declaration_GetByContractResponse")]
        System.Threading.Tasks.Task<byte[]> Declaration_GetByContractAsync(decimal p_Contract_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Declaration_Delete", ReplyAction="http://tempuri.org/CWContractService/Declaration_DeleteResponse")]
        bool Declaration_Delete(decimal p_Declaration_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Declaration_Delete", ReplyAction="http://tempuri.org/CWContractService/Declaration_DeleteResponse")]
        System.Threading.Tasks.Task<bool> Declaration_DeleteAsync(decimal p_Declaration_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Declaration_Update_Status", ReplyAction="http://tempuri.org/CWContractService/Declaration_Update_StatusResponse")]
        bool Declaration_Update_Status(decimal Declaration_Id, decimal Status, string Reason, string Approve_By);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Declaration_Update_Status", ReplyAction="http://tempuri.org/CWContractService/Declaration_Update_StatusResponse")]
        System.Threading.Tasks.Task<bool> Declaration_Update_StatusAsync(decimal Declaration_Id, decimal Status, string Reason, string Approve_By);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Declaration_Insert", ReplyAction="http://tempuri.org/CWContractService/Declaration_InsertResponse")]
        decimal Declaration_Insert(
                    string Declaration_Code, 
                    decimal Contract_Id, 
                    string Contract_Code, 
                    decimal Type, 
                    decimal Declaration_Type, 
                    System.DateTime Register_Date, 
                    decimal Money_Type, 
                    decimal Total_Value, 
                    decimal WareHouse_Id, 
                    string WareHouse_Name, 
                    string WareHouse_Location, 
                    string Gate, 
                    decimal Receive_Number, 
                    decimal Receive_Year, 
                    decimal VanDon_Number, 
                    System.DateTime VanDon_Date, 
                    decimal Status, 
                    string Source, 
                    decimal Declaration_Refence_Id, 
                    string Declaration_Refence_Code, 
                    string Custom_Register, 
                    string CREATED_BY, 
                    System.DateTime CREATED_DATE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Declaration_Insert", ReplyAction="http://tempuri.org/CWContractService/Declaration_InsertResponse")]
        System.Threading.Tasks.Task<decimal> Declaration_InsertAsync(
                    string Declaration_Code, 
                    decimal Contract_Id, 
                    string Contract_Code, 
                    decimal Type, 
                    decimal Declaration_Type, 
                    System.DateTime Register_Date, 
                    decimal Money_Type, 
                    decimal Total_Value, 
                    decimal WareHouse_Id, 
                    string WareHouse_Name, 
                    string WareHouse_Location, 
                    string Gate, 
                    decimal Receive_Number, 
                    decimal Receive_Year, 
                    decimal VanDon_Number, 
                    System.DateTime VanDon_Date, 
                    decimal Status, 
                    string Source, 
                    decimal Declaration_Refence_Id, 
                    string Declaration_Refence_Code, 
                    string Custom_Register, 
                    string CREATED_BY, 
                    System.DateTime CREATED_DATE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Declaration_Update", ReplyAction="http://tempuri.org/CWContractService/Declaration_UpdateResponse")]
        int Declaration_Update(
                    decimal Declaration_Id, 
                    decimal Declaration_Type, 
                    System.DateTime Register_Date, 
                    decimal Money_Type, 
                    decimal Total_Value, 
                    decimal WareHouse_Id, 
                    string WareHouse_Name, 
                    string WareHouse_Location, 
                    string Gate, 
                    decimal Receive_Number, 
                    decimal Receive_Year, 
                    decimal VanDon_Number, 
                    System.DateTime VanDon_Date, 
                    string Source, 
                    string Custom_Register, 
                    string MODIFIED_BY, 
                    System.DateTime MODIFIED_DATE, 
                    decimal Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Declaration_Update", ReplyAction="http://tempuri.org/CWContractService/Declaration_UpdateResponse")]
        System.Threading.Tasks.Task<int> Declaration_UpdateAsync(
                    decimal Declaration_Id, 
                    decimal Declaration_Type, 
                    System.DateTime Register_Date, 
                    decimal Money_Type, 
                    decimal Total_Value, 
                    decimal WareHouse_Id, 
                    string WareHouse_Name, 
                    string WareHouse_Location, 
                    string Gate, 
                    decimal Receive_Number, 
                    decimal Receive_Year, 
                    decimal VanDon_Number, 
                    System.DateTime VanDon_Date, 
                    string Source, 
                    string Custom_Register, 
                    string MODIFIED_BY, 
                    System.DateTime MODIFIED_DATE, 
                    decimal Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/DeclarationTableSearch", ReplyAction="http://tempuri.org/CWContractService/DeclarationTableSearchResponse")]
        CW_Business.WareHoseService.DeclarationTableSearchResponse DeclarationTableSearch(CW_Business.WareHoseService.DeclarationTableSearchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/DeclarationTableSearch", ReplyAction="http://tempuri.org/CWContractService/DeclarationTableSearchResponse")]
        System.Threading.Tasks.Task<CW_Business.WareHoseService.DeclarationTableSearchResponse> DeclarationTableSearchAsync(CW_Business.WareHoseService.DeclarationTableSearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/DeclarationLiquidationSearch", ReplyAction="http://tempuri.org/CWContractService/DeclarationLiquidationSearchResponse")]
        CW_Business.WareHoseService.DeclarationLiquidationSearchResponse DeclarationLiquidationSearch(CW_Business.WareHoseService.DeclarationLiquidationSearchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/DeclarationLiquidationSearch", ReplyAction="http://tempuri.org/CWContractService/DeclarationLiquidationSearchResponse")]
        System.Threading.Tasks.Task<CW_Business.WareHoseService.DeclarationLiquidationSearchResponse> DeclarationLiquidationSearchAsync(CW_Business.WareHoseService.DeclarationLiquidationSearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/DeclarationGetById", ReplyAction="http://tempuri.org/CWContractService/DeclarationGetByIdResponse")]
        byte[] DeclarationGetById(decimal p_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/DeclarationGetById", ReplyAction="http://tempuri.org/CWContractService/DeclarationGetByIdResponse")]
        System.Threading.Tasks.Task<byte[]> DeclarationGetByIdAsync(decimal p_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Contract_GetAll", ReplyAction="http://tempuri.org/CWContractService/Contract_GetAllResponse")]
        byte[] Contract_GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Contract_GetAll", ReplyAction="http://tempuri.org/CWContractService/Contract_GetAllResponse")]
        System.Threading.Tasks.Task<byte[]> Contract_GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Contract_GetByCode", ReplyAction="http://tempuri.org/CWContractService/Contract_GetByCodeResponse")]
        byte[] Contract_GetByCode(string p_Contract_Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Contract_GetByCode", ReplyAction="http://tempuri.org/CWContractService/Contract_GetByCodeResponse")]
        System.Threading.Tasks.Task<byte[]> Contract_GetByCodeAsync(string p_Contract_Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Contract_GetById", ReplyAction="http://tempuri.org/CWContractService/Contract_GetByIdResponse")]
        byte[] Contract_GetById(decimal p_Contract_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Contract_GetById", ReplyAction="http://tempuri.org/CWContractService/Contract_GetByIdResponse")]
        System.Threading.Tasks.Task<byte[]> Contract_GetByIdAsync(decimal p_Contract_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Contract_GetBy_WareHouse", ReplyAction="http://tempuri.org/CWContractService/Contract_GetBy_WareHouseResponse")]
        byte[] Contract_GetBy_WareHouse(decimal WareHouse_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Contract_GetBy_WareHouse", ReplyAction="http://tempuri.org/CWContractService/Contract_GetBy_WareHouseResponse")]
        System.Threading.Tasks.Task<byte[]> Contract_GetBy_WareHouseAsync(decimal WareHouse_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Contract_GetBy_User", ReplyAction="http://tempuri.org/CWContractService/Contract_GetBy_UserResponse")]
        byte[] Contract_GetBy_User(string User_Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Contract_GetBy_User", ReplyAction="http://tempuri.org/CWContractService/Contract_GetBy_UserResponse")]
        System.Threading.Tasks.Task<byte[]> Contract_GetBy_UserAsync(string User_Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Contract_Delete", ReplyAction="http://tempuri.org/CWContractService/Contract_DeleteResponse")]
        decimal Contract_Delete(decimal p_Contract_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Contract_Delete", ReplyAction="http://tempuri.org/CWContractService/Contract_DeleteResponse")]
        System.Threading.Tasks.Task<decimal> Contract_DeleteAsync(decimal p_Contract_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Contract_Update_Status", ReplyAction="http://tempuri.org/CWContractService/Contract_Update_StatusResponse")]
        bool Contract_Update_Status(decimal Contract_Id, decimal Status, string Reason, string Approve_By);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Contract_Update_Status", ReplyAction="http://tempuri.org/CWContractService/Contract_Update_StatusResponse")]
        System.Threading.Tasks.Task<bool> Contract_Update_StatusAsync(decimal Contract_Id, decimal Status, string Reason, string Approve_By);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Contract_Insert", ReplyAction="http://tempuri.org/CWContractService/Contract_InsertResponse")]
        bool Contract_Insert(string CONTRACT_CODE, System.DateTime REGISTER_DATE, decimal PERIOD, decimal RECEIVE_YEAR, decimal WAREHOUSE_ID, string WAREHOUSE_NAME, decimal BUSINESS_ID, decimal MONEY_TYPE, decimal STATUS, string CREATED_BY, System.DateTime CREATED_DATE, System.DateTime DUE_DATE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Contract_Insert", ReplyAction="http://tempuri.org/CWContractService/Contract_InsertResponse")]
        System.Threading.Tasks.Task<bool> Contract_InsertAsync(string CONTRACT_CODE, System.DateTime REGISTER_DATE, decimal PERIOD, decimal RECEIVE_YEAR, decimal WAREHOUSE_ID, string WAREHOUSE_NAME, decimal BUSINESS_ID, decimal MONEY_TYPE, decimal STATUS, string CREATED_BY, System.DateTime CREATED_DATE, System.DateTime DUE_DATE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Contract_Update", ReplyAction="http://tempuri.org/CWContractService/Contract_UpdateResponse")]
        bool Contract_Update(decimal CONTRACT_ID, System.DateTime REGISTER_DATE, decimal PERIOD, decimal RECEIVE_YEAR, decimal WAREHOUSE_ID, string WAREHOUSE_NAME, decimal BUSINESS_ID, decimal MONEY_TYPE, string MODIFIED_BY, System.DateTime MODIFIED_DATE, decimal STATUS, System.DateTime DUE_DATE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Contract_Update", ReplyAction="http://tempuri.org/CWContractService/Contract_UpdateResponse")]
        System.Threading.Tasks.Task<bool> Contract_UpdateAsync(decimal CONTRACT_ID, System.DateTime REGISTER_DATE, decimal PERIOD, decimal RECEIVE_YEAR, decimal WAREHOUSE_ID, string WAREHOUSE_NAME, decimal BUSINESS_ID, decimal MONEY_TYPE, string MODIFIED_BY, System.DateTime MODIFIED_DATE, decimal STATUS, System.DateTime DUE_DATE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/TableSearch", ReplyAction="http://tempuri.org/CWContractService/TableSearchResponse")]
        CW_Business.WareHoseService.TableSearchResponse TableSearch(CW_Business.WareHoseService.TableSearchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/TableSearch", ReplyAction="http://tempuri.org/CWContractService/TableSearchResponse")]
        System.Threading.Tasks.Task<CW_Business.WareHoseService.TableSearchResponse> TableSearchAsync(CW_Business.WareHoseService.TableSearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Contract_Search_ThanhKhoan", ReplyAction="http://tempuri.org/CWContractService/Contract_Search_ThanhKhoanResponse")]
        CW_Business.WareHoseService.Contract_Search_ThanhKhoanResponse Contract_Search_ThanhKhoan(CW_Business.WareHoseService.Contract_Search_ThanhKhoanRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Contract_Search_ThanhKhoan", ReplyAction="http://tempuri.org/CWContractService/Contract_Search_ThanhKhoanResponse")]
        System.Threading.Tasks.Task<CW_Business.WareHoseService.Contract_Search_ThanhKhoanResponse> Contract_Search_ThanhKhoanAsync(CW_Business.WareHoseService.Contract_Search_ThanhKhoanRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Contract_GetByStatus", ReplyAction="http://tempuri.org/CWContractService/Contract_GetByStatusResponse")]
        byte[] Contract_GetByStatus(int p_status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Contract_GetByStatus", ReplyAction="http://tempuri.org/CWContractService/Contract_GetByStatusResponse")]
        System.Threading.Tasks.Task<byte[]> Contract_GetByStatusAsync(int p_status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Allcode_GetAll", ReplyAction="http://tempuri.org/CWContractService/Allcode_GetAllResponse")]
        byte[] Allcode_GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Allcode_GetAll", ReplyAction="http://tempuri.org/CWContractService/Allcode_GetAllResponse")]
        System.Threading.Tasks.Task<byte[]> Allcode_GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/AllCode_CheckWCF", ReplyAction="http://tempuri.org/CWContractService/AllCode_CheckWCFResponse")]
        string AllCode_CheckWCF();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/AllCode_CheckWCF", ReplyAction="http://tempuri.org/CWContractService/AllCode_CheckWCFResponse")]
        System.Threading.Tasks.Task<string> AllCode_CheckWCFAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Get_Current_Date", ReplyAction="http://tempuri.org/CWContractService/Get_Current_DateResponse")]
        System.DateTime Get_Current_Date();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Get_Current_Date", ReplyAction="http://tempuri.org/CWContractService/Get_Current_DateResponse")]
        System.Threading.Tasks.Task<System.DateTime> Get_Current_DateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Get_TonKho", ReplyAction="http://tempuri.org/CWContractService/Get_TonKhoResponse")]
        byte[] Get_TonKho(decimal p_warehouse_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/Get_TonKho", ReplyAction="http://tempuri.org/CWContractService/Get_TonKhoResponse")]
        System.Threading.Tasks.Task<byte[]> Get_TonKhoAsync(decimal p_warehouse_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/WAREHOUSE_GET_ALL", ReplyAction="http://tempuri.org/CWContractService/WAREHOUSE_GET_ALLResponse")]
        byte[] WAREHOUSE_GET_ALL();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/WAREHOUSE_GET_ALL", ReplyAction="http://tempuri.org/CWContractService/WAREHOUSE_GET_ALLResponse")]
        System.Threading.Tasks.Task<byte[]> WAREHOUSE_GET_ALLAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/WareHouse_GetById", ReplyAction="http://tempuri.org/CWContractService/WareHouse_GetByIdResponse")]
        byte[] WareHouse_GetById(decimal WareHouse_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/WareHouse_GetById", ReplyAction="http://tempuri.org/CWContractService/WareHouse_GetByIdResponse")]
        System.Threading.Tasks.Task<byte[]> WareHouse_GetByIdAsync(decimal WareHouse_Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/WareHouse_GetByUser", ReplyAction="http://tempuri.org/CWContractService/WareHouse_GetByUserResponse")]
        byte[] WareHouse_GetByUser(decimal User_Id, decimal User_Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CWContractService/WareHouse_GetByUser", ReplyAction="http://tempuri.org/CWContractService/WareHouse_GetByUserResponse")]
        System.Threading.Tasks.Task<byte[]> WareHouse_GetByUserAsync(decimal User_Id, decimal User_Type);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UserInfo_Search", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UserInfo_SearchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string user_type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string Custom_Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string column;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string type_sort;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string start;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string end;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public decimal P_Total;
        
        public UserInfo_SearchRequest() {
        }
        
        public UserInfo_SearchRequest(string name, string user_type, string status, string Custom_Id, string column, string type_sort, string start, string end, decimal P_Total) {
            this.name = name;
            this.user_type = user_type;
            this.status = status;
            this.Custom_Id = Custom_Id;
            this.column = column;
            this.type_sort = type_sort;
            this.start = start;
            this.end = end;
            this.P_Total = P_Total;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UserInfo_SearchResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UserInfo_SearchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public byte[] UserInfo_SearchResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public decimal P_Total;
        
        public UserInfo_SearchResponse() {
        }
        
        public UserInfo_SearchResponse(byte[] UserInfo_SearchResult, decimal P_Total) {
            this.UserInfo_SearchResult = UserInfo_SearchResult;
            this.P_Total = P_Total;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeclarationTableSearch", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeclarationTableSearchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string USER_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public decimal USER_TYPE;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string USER_NAME;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string DECLARATION_CODE;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string CONTRACT_CODE;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string RECEIVE_NUMBER;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string RECEIVE_YEAR;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string SO_VAN_DON;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public int TYPE;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public int STATUS;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public string REGISTER_DATE;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public decimal WAREHOUSE_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=12)]
        public string NGAY_VAN_DON;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=13)]
        public string DECLARATION_REFENCE_CODE;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=14)]
        public string p_order_by;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=15)]
        public int p_start;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=16)]
        public int p_end;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=17)]
        public int p_total;
        
        public DeclarationTableSearchRequest() {
        }
        
        public DeclarationTableSearchRequest(
                    string USER_ID, 
                    decimal USER_TYPE, 
                    string USER_NAME, 
                    string DECLARATION_CODE, 
                    string CONTRACT_CODE, 
                    string RECEIVE_NUMBER, 
                    string RECEIVE_YEAR, 
                    string SO_VAN_DON, 
                    int TYPE, 
                    int STATUS, 
                    string REGISTER_DATE, 
                    decimal WAREHOUSE_ID, 
                    string NGAY_VAN_DON, 
                    string DECLARATION_REFENCE_CODE, 
                    string p_order_by, 
                    int p_start, 
                    int p_end, 
                    int p_total) {
            this.USER_ID = USER_ID;
            this.USER_TYPE = USER_TYPE;
            this.USER_NAME = USER_NAME;
            this.DECLARATION_CODE = DECLARATION_CODE;
            this.CONTRACT_CODE = CONTRACT_CODE;
            this.RECEIVE_NUMBER = RECEIVE_NUMBER;
            this.RECEIVE_YEAR = RECEIVE_YEAR;
            this.SO_VAN_DON = SO_VAN_DON;
            this.TYPE = TYPE;
            this.STATUS = STATUS;
            this.REGISTER_DATE = REGISTER_DATE;
            this.WAREHOUSE_ID = WAREHOUSE_ID;
            this.NGAY_VAN_DON = NGAY_VAN_DON;
            this.DECLARATION_REFENCE_CODE = DECLARATION_REFENCE_CODE;
            this.p_order_by = p_order_by;
            this.p_start = p_start;
            this.p_end = p_end;
            this.p_total = p_total;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeclarationTableSearchResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeclarationTableSearchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public byte[] DeclarationTableSearchResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int p_total;
        
        public DeclarationTableSearchResponse() {
        }
        
        public DeclarationTableSearchResponse(byte[] DeclarationTableSearchResult, int p_total) {
            this.DeclarationTableSearchResult = DeclarationTableSearchResult;
            this.p_total = p_total;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeclarationLiquidationSearch", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeclarationLiquidationSearchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string USER_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public decimal USER_TYPE;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string USER_NAME;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string DECLARATION_CODE;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string CONTRACT_CODE;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string RECEIVE_NUMBER;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string RECEIVE_YEAR;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string SO_VAN_DON;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public int TYPE;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public int STATUS;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public string REGISTER_DATE;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public decimal WAREHOUSE_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=12)]
        public string NGAY_VAN_DON;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=13)]
        public string DECLARATION_REFENCE_CODE;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=14)]
        public string p_order_by;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=15)]
        public int p_start;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=16)]
        public int p_end;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=17)]
        public int p_total;
        
        public DeclarationLiquidationSearchRequest() {
        }
        
        public DeclarationLiquidationSearchRequest(
                    string USER_ID, 
                    decimal USER_TYPE, 
                    string USER_NAME, 
                    string DECLARATION_CODE, 
                    string CONTRACT_CODE, 
                    string RECEIVE_NUMBER, 
                    string RECEIVE_YEAR, 
                    string SO_VAN_DON, 
                    int TYPE, 
                    int STATUS, 
                    string REGISTER_DATE, 
                    decimal WAREHOUSE_ID, 
                    string NGAY_VAN_DON, 
                    string DECLARATION_REFENCE_CODE, 
                    string p_order_by, 
                    int p_start, 
                    int p_end, 
                    int p_total) {
            this.USER_ID = USER_ID;
            this.USER_TYPE = USER_TYPE;
            this.USER_NAME = USER_NAME;
            this.DECLARATION_CODE = DECLARATION_CODE;
            this.CONTRACT_CODE = CONTRACT_CODE;
            this.RECEIVE_NUMBER = RECEIVE_NUMBER;
            this.RECEIVE_YEAR = RECEIVE_YEAR;
            this.SO_VAN_DON = SO_VAN_DON;
            this.TYPE = TYPE;
            this.STATUS = STATUS;
            this.REGISTER_DATE = REGISTER_DATE;
            this.WAREHOUSE_ID = WAREHOUSE_ID;
            this.NGAY_VAN_DON = NGAY_VAN_DON;
            this.DECLARATION_REFENCE_CODE = DECLARATION_REFENCE_CODE;
            this.p_order_by = p_order_by;
            this.p_start = p_start;
            this.p_end = p_end;
            this.p_total = p_total;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeclarationLiquidationSearchResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeclarationLiquidationSearchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public byte[] DeclarationLiquidationSearchResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int p_total;
        
        public DeclarationLiquidationSearchResponse() {
        }
        
        public DeclarationLiquidationSearchResponse(byte[] DeclarationLiquidationSearchResult, int p_total) {
            this.DeclarationLiquidationSearchResult = DeclarationLiquidationSearchResult;
            this.p_total = p_total;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TableSearch", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class TableSearchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string CONTRACT_CODE;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime FR0MDATE;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int STATUS;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public decimal User_Type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string User_Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string Created_By;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public decimal Receive_Number;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public decimal Receive_Year;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public decimal WareHouse_Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public decimal Business_Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public string p_order_by;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public int p_start;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=12)]
        public int p_end;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=13)]
        public int p_total;
        
        public TableSearchRequest() {
        }
        
        public TableSearchRequest(string CONTRACT_CODE, System.DateTime FR0MDATE, int STATUS, decimal User_Type, string User_Id, string Created_By, decimal Receive_Number, decimal Receive_Year, decimal WareHouse_Id, decimal Business_Id, string p_order_by, int p_start, int p_end, int p_total) {
            this.CONTRACT_CODE = CONTRACT_CODE;
            this.FR0MDATE = FR0MDATE;
            this.STATUS = STATUS;
            this.User_Type = User_Type;
            this.User_Id = User_Id;
            this.Created_By = Created_By;
            this.Receive_Number = Receive_Number;
            this.Receive_Year = Receive_Year;
            this.WareHouse_Id = WareHouse_Id;
            this.Business_Id = Business_Id;
            this.p_order_by = p_order_by;
            this.p_start = p_start;
            this.p_end = p_end;
            this.p_total = p_total;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TableSearchResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class TableSearchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public byte[] TableSearchResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int p_total;
        
        public TableSearchResponse() {
        }
        
        public TableSearchResponse(byte[] TableSearchResult, int p_total) {
            this.TableSearchResult = TableSearchResult;
            this.p_total = p_total;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Contract_Search_ThanhKhoan", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Contract_Search_ThanhKhoanRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string CONTRACT_CODE;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime FR0MDATE;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int STATUS;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public decimal User_Type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string User_Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string Created_By;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public decimal Receive_Number;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public decimal Receive_Year;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public decimal WareHouse_Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public decimal Business_Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public string p_order_by;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public int p_start;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=12)]
        public int p_end;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=13)]
        public int p_total;
        
        public Contract_Search_ThanhKhoanRequest() {
        }
        
        public Contract_Search_ThanhKhoanRequest(string CONTRACT_CODE, System.DateTime FR0MDATE, int STATUS, decimal User_Type, string User_Id, string Created_By, decimal Receive_Number, decimal Receive_Year, decimal WareHouse_Id, decimal Business_Id, string p_order_by, int p_start, int p_end, int p_total) {
            this.CONTRACT_CODE = CONTRACT_CODE;
            this.FR0MDATE = FR0MDATE;
            this.STATUS = STATUS;
            this.User_Type = User_Type;
            this.User_Id = User_Id;
            this.Created_By = Created_By;
            this.Receive_Number = Receive_Number;
            this.Receive_Year = Receive_Year;
            this.WareHouse_Id = WareHouse_Id;
            this.Business_Id = Business_Id;
            this.p_order_by = p_order_by;
            this.p_start = p_start;
            this.p_end = p_end;
            this.p_total = p_total;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Contract_Search_ThanhKhoanResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Contract_Search_ThanhKhoanResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public byte[] Contract_Search_ThanhKhoanResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int p_total;
        
        public Contract_Search_ThanhKhoanResponse() {
        }
        
        public Contract_Search_ThanhKhoanResponse(byte[] Contract_Search_ThanhKhoanResult, int p_total) {
            this.Contract_Search_ThanhKhoanResult = Contract_Search_ThanhKhoanResult;
            this.p_total = p_total;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CWContractServiceChannel : CW_Business.WareHoseService.CWContractService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWContractServiceClient : System.ServiceModel.ClientBase<CW_Business.WareHoseService.CWContractService>, CW_Business.WareHoseService.CWContractService {
        
        public CWContractServiceClient() {
        }
        
        public CWContractServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CWContractServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CWContractServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CWContractServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public byte[] WareHouse_Search(string p_name) {
            return base.Channel.WareHouse_Search(p_name);
        }
        
        public System.Threading.Tasks.Task<byte[]> WareHouse_SearchAsync(string p_name) {
            return base.Channel.WareHouse_SearchAsync(p_name);
        }
        
        public decimal WareHouse_Delete(decimal WareHouse_Id) {
            return base.Channel.WareHouse_Delete(WareHouse_Id);
        }
        
        public System.Threading.Tasks.Task<decimal> WareHouse_DeleteAsync(decimal WareHouse_Id) {
            return base.Channel.WareHouse_DeleteAsync(WareHouse_Id);
        }
        
        public decimal WareHouse_Insert(string WareHouse_Code, string WareHouse_Name, string Location) {
            return base.Channel.WareHouse_Insert(WareHouse_Code, WareHouse_Name, Location);
        }
        
        public System.Threading.Tasks.Task<decimal> WareHouse_InsertAsync(string WareHouse_Code, string WareHouse_Name, string Location) {
            return base.Channel.WareHouse_InsertAsync(WareHouse_Code, WareHouse_Name, Location);
        }
        
        public bool WareHouse_Update(decimal WareHouse_Id, string WareHous_Name, string Location) {
            return base.Channel.WareHouse_Update(WareHouse_Id, WareHous_Name, Location);
        }
        
        public System.Threading.Tasks.Task<bool> WareHouse_UpdateAsync(decimal WareHouse_Id, string WareHous_Name, string Location) {
            return base.Channel.WareHouse_UpdateAsync(WareHouse_Id, WareHous_Name, Location);
        }
        
        public byte[] BUSINESS_GET_ALL() {
            return base.Channel.BUSINESS_GET_ALL();
        }
        
        public System.Threading.Tasks.Task<byte[]> BUSINESS_GET_ALLAsync() {
            return base.Channel.BUSINESS_GET_ALLAsync();
        }
        
        public byte[] Category_GetAll() {
            return base.Channel.Category_GetAll();
        }
        
        public System.Threading.Tasks.Task<byte[]> Category_GetAllAsync() {
            return base.Channel.Category_GetAllAsync();
        }
        
        public byte[] Category_GetById(decimal Category_Id) {
            return base.Channel.Category_GetById(Category_Id);
        }
        
        public System.Threading.Tasks.Task<byte[]> Category_GetByIdAsync(decimal Category_Id) {
            return base.Channel.Category_GetByIdAsync(Category_Id);
        }
        
        public byte[] Category_GetByCode(string Category_Code) {
            return base.Channel.Category_GetByCode(Category_Code);
        }
        
        public System.Threading.Tasks.Task<byte[]> Category_GetByCodeAsync(string Category_Code) {
            return base.Channel.Category_GetByCodeAsync(Category_Code);
        }
        
        public byte[] Category_Search(string p_name) {
            return base.Channel.Category_Search(p_name);
        }
        
        public System.Threading.Tasks.Task<byte[]> Category_SearchAsync(string p_name) {
            return base.Channel.Category_SearchAsync(p_name);
        }
        
        public decimal Category_Delete(decimal Category_Id) {
            return base.Channel.Category_Delete(Category_Id);
        }
        
        public System.Threading.Tasks.Task<decimal> Category_DeleteAsync(decimal Category_Id) {
            return base.Channel.Category_DeleteAsync(Category_Id);
        }
        
        public bool Category_Insert(string Category_Code, string Category_Name, string Unit) {
            return base.Channel.Category_Insert(Category_Code, Category_Name, Unit);
        }
        
        public System.Threading.Tasks.Task<bool> Category_InsertAsync(string Category_Code, string Category_Name, string Unit) {
            return base.Channel.Category_InsertAsync(Category_Code, Category_Name, Unit);
        }
        
        public bool Category_Update(decimal Category_Id, string Category_Name, string Unit) {
            return base.Channel.Category_Update(Category_Id, Category_Name, Unit);
        }
        
        public System.Threading.Tasks.Task<bool> Category_UpdateAsync(decimal Category_Id, string Category_Name, string Unit) {
            return base.Channel.Category_UpdateAsync(Category_Id, Category_Name, Unit);
        }
        
        public byte[] DBMem_Get_HashInfo(string strhashName) {
            return base.Channel.DBMem_Get_HashInfo(strhashName);
        }
        
        public System.Threading.Tasks.Task<byte[]> DBMem_Get_HashInfoAsync(string strhashName) {
            return base.Channel.DBMem_Get_HashInfoAsync(strhashName);
        }
        
        public byte[] FunctionsGetAll() {
            return base.Channel.FunctionsGetAll();
        }
        
        public System.Threading.Tasks.Task<byte[]> FunctionsGetAllAsync() {
            return base.Channel.FunctionsGetAllAsync();
        }
        
        public byte[] GetUserFuncByUserID(decimal pIdUser) {
            return base.Channel.GetUserFuncByUserID(pIdUser);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetUserFuncByUserIDAsync(decimal pIdUser) {
            return base.Channel.GetUserFuncByUserIDAsync(pIdUser);
        }
        
        public byte[] FunctionsGetBy_Type(string p_func_type) {
            return base.Channel.FunctionsGetBy_Type(p_func_type);
        }
        
        public System.Threading.Tasks.Task<byte[]> FunctionsGetBy_TypeAsync(string p_func_type) {
            return base.Channel.FunctionsGetBy_TypeAsync(p_func_type);
        }
        
        public byte[] FunctionInGroupsGetAll(decimal pIdGroup) {
            return base.Channel.FunctionInGroupsGetAll(pIdGroup);
        }
        
        public System.Threading.Tasks.Task<byte[]> FunctionInGroupsGetAllAsync(decimal pIdGroup) {
            return base.Channel.FunctionInGroupsGetAllAsync(pIdGroup);
        }
        
        public byte[] FunctionGroupsGetAll() {
            return base.Channel.FunctionGroupsGetAll();
        }
        
        public System.Threading.Tasks.Task<byte[]> FunctionGroupsGetAllAsync() {
            return base.Channel.FunctionGroupsGetAllAsync();
        }
        
        public byte[] FunctionNotInGroupsGetAll(decimal pIdGroup, decimal pIdUser, decimal pCreateOwner) {
            return base.Channel.FunctionNotInGroupsGetAll(pIdGroup, pIdUser, pCreateOwner);
        }
        
        public System.Threading.Tasks.Task<byte[]> FunctionNotInGroupsGetAllAsync(decimal pIdGroup, decimal pIdUser, decimal pCreateOwner) {
            return base.Channel.FunctionNotInGroupsGetAllAsync(pIdGroup, pIdUser, pCreateOwner);
        }
        
        public byte[] FunctionNotInGroupsByAppGetAll(decimal pIdGroup, decimal pIdUser, decimal pCreateOwner) {
            return base.Channel.FunctionNotInGroupsByAppGetAll(pIdGroup, pIdUser, pCreateOwner);
        }
        
        public System.Threading.Tasks.Task<byte[]> FunctionNotInGroupsByAppGetAllAsync(decimal pIdGroup, decimal pIdUser, decimal pCreateOwner) {
            return base.Channel.FunctionNotInGroupsByAppGetAllAsync(pIdGroup, pIdUser, pCreateOwner);
        }
        
        public decimal GroupFunctionInsert(decimal p_id_group, string p_lst_function, string p_createby, System.DateTime p_createdate) {
            return base.Channel.GroupFunctionInsert(p_id_group, p_lst_function, p_createby, p_createdate);
        }
        
        public System.Threading.Tasks.Task<decimal> GroupFunctionInsertAsync(decimal p_id_group, string p_lst_function, string p_createby, System.DateTime p_createdate) {
            return base.Channel.GroupFunctionInsertAsync(p_id_group, p_lst_function, p_createby, p_createdate);
        }
        
        public byte[] GroupInfoGetAll() {
            return base.Channel.GroupInfoGetAll();
        }
        
        public System.Threading.Tasks.Task<byte[]> GroupInfoGetAllAsync() {
            return base.Channel.GroupInfoGetAllAsync();
        }
        
        public decimal GroupInfoInsert(string p_name, string p_note, string p_createby, System.DateTime p_createdate, decimal pIdUser) {
            return base.Channel.GroupInfoInsert(p_name, p_note, p_createby, p_createdate, pIdUser);
        }
        
        public System.Threading.Tasks.Task<decimal> GroupInfoInsertAsync(string p_name, string p_note, string p_createby, System.DateTime p_createdate, decimal pIdUser) {
            return base.Channel.GroupInfoInsertAsync(p_name, p_note, p_createby, p_createdate, pIdUser);
        }
        
        public decimal GroupInfoUpdate(decimal p_id, string p_name, string p_note, string p_modifiedby, System.DateTime p_modifieddate) {
            return base.Channel.GroupInfoUpdate(p_id, p_name, p_note, p_modifiedby, p_modifieddate);
        }
        
        public System.Threading.Tasks.Task<decimal> GroupInfoUpdateAsync(decimal p_id, string p_name, string p_note, string p_modifiedby, System.DateTime p_modifieddate) {
            return base.Channel.GroupInfoUpdateAsync(p_id, p_name, p_note, p_modifiedby, p_modifieddate);
        }
        
        public decimal GroupInfoDelete(decimal pId) {
            return base.Channel.GroupInfoDelete(pId);
        }
        
        public System.Threading.Tasks.Task<decimal> GroupInfoDeleteAsync(decimal pId) {
            return base.Channel.GroupInfoDeleteAsync(pId);
        }
        
        public byte[] GroupUserGetByUserID(decimal pIdUser) {
            return base.Channel.GroupUserGetByUserID(pIdUser);
        }
        
        public System.Threading.Tasks.Task<byte[]> GroupUserGetByUserIDAsync(decimal pIdUser) {
            return base.Channel.GroupUserGetByUserIDAsync(pIdUser);
        }
        
        public byte[] GroupUserGetNotInUserID(decimal pIdUser) {
            return base.Channel.GroupUserGetNotInUserID(pIdUser);
        }
        
        public System.Threading.Tasks.Task<byte[]> GroupUserGetNotInUserIDAsync(decimal pIdUser) {
            return base.Channel.GroupUserGetNotInUserIDAsync(pIdUser);
        }
        
        public decimal GroupUserInsert(decimal p_id_user, decimal p_id_group, string p_createby, System.DateTime p_createdate) {
            return base.Channel.GroupUserInsert(p_id_user, p_id_group, p_createby, p_createdate);
        }
        
        public System.Threading.Tasks.Task<decimal> GroupUserInsertAsync(decimal p_id_user, decimal p_id_group, string p_createby, System.DateTime p_createdate) {
            return base.Channel.GroupUserInsertAsync(p_id_user, p_id_group, p_createby, p_createdate);
        }
        
        public decimal GroupUserDeleted(decimal pIdUser, decimal pIdGroup) {
            return base.Channel.GroupUserDeleted(pIdUser, pIdGroup);
        }
        
        public System.Threading.Tasks.Task<decimal> GroupUserDeletedAsync(decimal pIdUser, decimal pIdGroup) {
            return base.Channel.GroupUserDeletedAsync(pIdUser, pIdGroup);
        }
        
        public byte[] GetUserOfGroupByIDGroup(decimal pIDGroup) {
            return base.Channel.GetUserOfGroupByIDGroup(pIDGroup);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetUserOfGroupByIDGroupAsync(decimal pIDGroup) {
            return base.Channel.GetUserOfGroupByIDGroupAsync(pIDGroup);
        }
        
        public byte[] UserInfo_GetById(decimal p_id) {
            return base.Channel.UserInfo_GetById(p_id);
        }
        
        public System.Threading.Tasks.Task<byte[]> UserInfo_GetByIdAsync(decimal p_id) {
            return base.Channel.UserInfo_GetByIdAsync(p_id);
        }
        
        public byte[] UserInfo_GetByType(decimal p_type) {
            return base.Channel.UserInfo_GetByType(p_type);
        }
        
        public System.Threading.Tasks.Task<byte[]> UserInfo_GetByTypeAsync(decimal p_type) {
            return base.Channel.UserInfo_GetByTypeAsync(p_type);
        }
        
        public byte[] UserInfo_GetByName(string p_name) {
            return base.Channel.UserInfo_GetByName(p_name);
        }
        
        public System.Threading.Tasks.Task<byte[]> UserInfo_GetByNameAsync(string p_name) {
            return base.Channel.UserInfo_GetByNameAsync(p_name);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CW_Business.WareHoseService.UserInfo_SearchResponse CW_Business.WareHoseService.CWContractService.UserInfo_Search(CW_Business.WareHoseService.UserInfo_SearchRequest request) {
            return base.Channel.UserInfo_Search(request);
        }
        
        public byte[] UserInfo_Search(string name, string user_type, string status, string Custom_Id, string column, string type_sort, string start, string end, ref decimal P_Total) {
            CW_Business.WareHoseService.UserInfo_SearchRequest inValue = new CW_Business.WareHoseService.UserInfo_SearchRequest();
            inValue.name = name;
            inValue.user_type = user_type;
            inValue.status = status;
            inValue.Custom_Id = Custom_Id;
            inValue.column = column;
            inValue.type_sort = type_sort;
            inValue.start = start;
            inValue.end = end;
            inValue.P_Total = P_Total;
            CW_Business.WareHoseService.UserInfo_SearchResponse retVal = ((CW_Business.WareHoseService.CWContractService)(this)).UserInfo_Search(inValue);
            P_Total = retVal.P_Total;
            return retVal.UserInfo_SearchResult;
        }
        
        public System.Threading.Tasks.Task<CW_Business.WareHoseService.UserInfo_SearchResponse> UserInfo_SearchAsync(CW_Business.WareHoseService.UserInfo_SearchRequest request) {
            return base.Channel.UserInfo_SearchAsync(request);
        }
        
        public decimal UserInfo_Insert(string user_name, string password, string fullname, decimal Custom_Id, decimal user_type, decimal status, string Phone, string Email) {
            return base.Channel.UserInfo_Insert(user_name, password, fullname, Custom_Id, user_type, status, Phone, Email);
        }
        
        public System.Threading.Tasks.Task<decimal> UserInfo_InsertAsync(string user_name, string password, string fullname, decimal Custom_Id, decimal user_type, decimal status, string Phone, string Email) {
            return base.Channel.UserInfo_InsertAsync(user_name, password, fullname, Custom_Id, user_type, status, Phone, Email);
        }
        
        public decimal UserInfo_SetPassword(int p_user_id, int p_status, string p_password) {
            return base.Channel.UserInfo_SetPassword(p_user_id, p_status, p_password);
        }
        
        public System.Threading.Tasks.Task<decimal> UserInfo_SetPasswordAsync(int p_user_id, int p_status, string p_password) {
            return base.Channel.UserInfo_SetPasswordAsync(p_user_id, p_status, p_password);
        }
        
        public decimal UserInfo_SetStatus(int p_user_id, int p_status) {
            return base.Channel.UserInfo_SetStatus(p_user_id, p_status);
        }
        
        public System.Threading.Tasks.Task<decimal> UserInfo_SetStatusAsync(int p_user_id, int p_status) {
            return base.Channel.UserInfo_SetStatusAsync(p_user_id, p_status);
        }
        
        public decimal UserInfo_Delete(int p_user_id) {
            return base.Channel.UserInfo_Delete(p_user_id);
        }
        
        public System.Threading.Tasks.Task<decimal> UserInfo_DeleteAsync(int p_user_id) {
            return base.Channel.UserInfo_DeleteAsync(p_user_id);
        }
        
        public decimal UserInfo_Update_Pass(int p_user_id, string p_pass, System.DateTime p_last_pass) {
            return base.Channel.UserInfo_Update_Pass(p_user_id, p_pass, p_last_pass);
        }
        
        public System.Threading.Tasks.Task<decimal> UserInfo_Update_PassAsync(int p_user_id, string p_pass, System.DateTime p_last_pass) {
            return base.Channel.UserInfo_Update_PassAsync(p_user_id, p_pass, p_last_pass);
        }
        
        public decimal UserFunctionInsert(decimal p_id_user, decimal p_func_id, string p_lst_function, decimal p_id_group, string p_created_by) {
            return base.Channel.UserFunctionInsert(p_id_user, p_func_id, p_lst_function, p_id_group, p_created_by);
        }
        
        public System.Threading.Tasks.Task<decimal> UserFunctionInsertAsync(decimal p_id_user, decimal p_func_id, string p_lst_function, decimal p_id_group, string p_created_by) {
            return base.Channel.UserFunctionInsertAsync(p_id_user, p_func_id, p_lst_function, p_id_group, p_created_by);
        }
        
        public decimal UserFunctionDeleted(decimal p_id_user, decimal p_id_function, decimal p_id_group) {
            return base.Channel.UserFunctionDeleted(p_id_user, p_id_function, p_id_group);
        }
        
        public System.Threading.Tasks.Task<decimal> UserFunctionDeletedAsync(decimal p_id_user, decimal p_id_function, decimal p_id_group) {
            return base.Channel.UserFunctionDeletedAsync(p_id_user, p_id_function, p_id_group);
        }
        
        public byte[] UserFunctionGetAll(decimal pIdUser, decimal pIdGroup) {
            return base.Channel.UserFunctionGetAll(pIdUser, pIdGroup);
        }
        
        public System.Threading.Tasks.Task<byte[]> UserFunctionGetAllAsync(decimal pIdUser, decimal pIdGroup) {
            return base.Channel.UserFunctionGetAllAsync(pIdUser, pIdGroup);
        }
        
        public byte[] Custom_GetAll() {
            return base.Channel.Custom_GetAll();
        }
        
        public System.Threading.Tasks.Task<byte[]> Custom_GetAllAsync() {
            return base.Channel.Custom_GetAllAsync();
        }
        
        public decimal Custom_Insert(string Custom_Name, string Location, string Note) {
            return base.Channel.Custom_Insert(Custom_Name, Location, Note);
        }
        
        public System.Threading.Tasks.Task<decimal> Custom_InsertAsync(string Custom_Name, string Location, string Note) {
            return base.Channel.Custom_InsertAsync(Custom_Name, Location, Note);
        }
        
        public decimal Custom_Delete(decimal Custom_Id) {
            return base.Channel.Custom_Delete(Custom_Id);
        }
        
        public System.Threading.Tasks.Task<decimal> Custom_DeleteAsync(decimal Custom_Id) {
            return base.Channel.Custom_DeleteAsync(Custom_Id);
        }
        
        public byte[] User_WareHouse_GetByUser(decimal p_user_id) {
            return base.Channel.User_WareHouse_GetByUser(p_user_id);
        }
        
        public System.Threading.Tasks.Task<byte[]> User_WareHouse_GetByUserAsync(decimal p_user_id) {
            return base.Channel.User_WareHouse_GetByUserAsync(p_user_id);
        }
        
        public bool User_WareHouse_Insert(decimal p_user_id, decimal p_warehouse_id, string p_created_by, System.DateTime p_created_date) {
            return base.Channel.User_WareHouse_Insert(p_user_id, p_warehouse_id, p_created_by, p_created_date);
        }
        
        public System.Threading.Tasks.Task<bool> User_WareHouse_InsertAsync(decimal p_user_id, decimal p_warehouse_id, string p_created_by, System.DateTime p_created_date) {
            return base.Channel.User_WareHouse_InsertAsync(p_user_id, p_warehouse_id, p_created_by, p_created_date);
        }
        
        public decimal WareHouse_DeleteByUser(decimal p_user_id) {
            return base.Channel.WareHouse_DeleteByUser(p_user_id);
        }
        
        public System.Threading.Tasks.Task<decimal> WareHouse_DeleteByUserAsync(decimal p_user_id) {
            return base.Channel.WareHouse_DeleteByUserAsync(p_user_id);
        }
        
        public byte[] Product_GetAll() {
            return base.Channel.Product_GetAll();
        }
        
        public System.Threading.Tasks.Task<byte[]> Product_GetAllAsync() {
            return base.Channel.Product_GetAllAsync();
        }
        
        public byte[] Product_GetById(decimal Product_Id) {
            return base.Channel.Product_GetById(Product_Id);
        }
        
        public System.Threading.Tasks.Task<byte[]> Product_GetByIdAsync(decimal Product_Id) {
            return base.Channel.Product_GetByIdAsync(Product_Id);
        }
        
        public byte[] Product_GetByCode(string Product_Code) {
            return base.Channel.Product_GetByCode(Product_Code);
        }
        
        public System.Threading.Tasks.Task<byte[]> Product_GetByCodeAsync(string Product_Code) {
            return base.Channel.Product_GetByCodeAsync(Product_Code);
        }
        
        public decimal Product_Delete(decimal Product_Id) {
            return base.Channel.Product_Delete(Product_Id);
        }
        
        public System.Threading.Tasks.Task<decimal> Product_DeleteAsync(decimal Product_Id) {
            return base.Channel.Product_DeleteAsync(Product_Id);
        }
        
        public byte[] Product_Search(string p_name) {
            return base.Channel.Product_Search(p_name);
        }
        
        public System.Threading.Tasks.Task<byte[]> Product_SearchAsync(string p_name) {
            return base.Channel.Product_SearchAsync(p_name);
        }
        
        public bool Product_Insert(string Product_Code, string Product_Name, decimal Category_Id, string Unit) {
            return base.Channel.Product_Insert(Product_Code, Product_Name, Category_Id, Unit);
        }
        
        public System.Threading.Tasks.Task<bool> Product_InsertAsync(string Product_Code, string Product_Name, decimal Category_Id, string Unit) {
            return base.Channel.Product_InsertAsync(Product_Code, Product_Name, Category_Id, Unit);
        }
        
        public bool Product_Update(decimal Product_Id, string Product_Name, decimal Category_Id, string Unit) {
            return base.Channel.Product_Update(Product_Id, Product_Name, Category_Id, Unit);
        }
        
        public System.Threading.Tasks.Task<bool> Product_UpdateAsync(decimal Product_Id, string Product_Name, decimal Category_Id, string Unit) {
            return base.Channel.Product_UpdateAsync(Product_Id, Product_Name, Category_Id, Unit);
        }
        
        public byte[] Product_Declaration_GetById(decimal Product_Declaration_Id) {
            return base.Channel.Product_Declaration_GetById(Product_Declaration_Id);
        }
        
        public System.Threading.Tasks.Task<byte[]> Product_Declaration_GetByIdAsync(decimal Product_Declaration_Id) {
            return base.Channel.Product_Declaration_GetByIdAsync(Product_Declaration_Id);
        }
        
        public bool Delete_Product_Declaration_ById(decimal Product_Declaration_Id) {
            return base.Channel.Delete_Product_Declaration_ById(Product_Declaration_Id);
        }
        
        public System.Threading.Tasks.Task<bool> Delete_Product_Declaration_ByIdAsync(decimal Product_Declaration_Id) {
            return base.Channel.Delete_Product_Declaration_ByIdAsync(Product_Declaration_Id);
        }
        
        public bool Delete_Product_Declaration_ByDeclaration_Id(decimal Declaration_Id) {
            return base.Channel.Delete_Product_Declaration_ByDeclaration_Id(Declaration_Id);
        }
        
        public System.Threading.Tasks.Task<bool> Delete_Product_Declaration_ByDeclaration_IdAsync(decimal Declaration_Id) {
            return base.Channel.Delete_Product_Declaration_ByDeclaration_IdAsync(Declaration_Id);
        }
        
        public bool Product_Declaration_Insert(decimal Product_Id, decimal Declaration_Id, decimal Type, string Unit, string Made_In, decimal Wrong_Number, decimal Package_Quantity, decimal Quantity, decimal Value, decimal Package_Quantity_Delivery, decimal Quantity_Delivery, decimal Declaration_Reference_Id) {
            return base.Channel.Product_Declaration_Insert(Product_Id, Declaration_Id, Type, Unit, Made_In, Wrong_Number, Package_Quantity, Quantity, Value, Package_Quantity_Delivery, Quantity_Delivery, Declaration_Reference_Id);
        }
        
        public System.Threading.Tasks.Task<bool> Product_Declaration_InsertAsync(decimal Product_Id, decimal Declaration_Id, decimal Type, string Unit, string Made_In, decimal Wrong_Number, decimal Package_Quantity, decimal Quantity, decimal Value, decimal Package_Quantity_Delivery, decimal Quantity_Delivery, decimal Declaration_Reference_Id) {
            return base.Channel.Product_Declaration_InsertAsync(Product_Id, Declaration_Id, Type, Unit, Made_In, Wrong_Number, Package_Quantity, Quantity, Value, Package_Quantity_Delivery, Quantity_Delivery, Declaration_Reference_Id);
        }
        
        public bool UpdateQuantity_Delivery(decimal Product_Declaration_Id, decimal Package_Quantity_Delivery, decimal Quantity_Delivery) {
            return base.Channel.UpdateQuantity_Delivery(Product_Declaration_Id, Package_Quantity_Delivery, Quantity_Delivery);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateQuantity_DeliveryAsync(decimal Product_Declaration_Id, decimal Package_Quantity_Delivery, decimal Quantity_Delivery) {
            return base.Channel.UpdateQuantity_DeliveryAsync(Product_Declaration_Id, Package_Quantity_Delivery, Quantity_Delivery);
        }
        
        public byte[] Declaration_GetAll() {
            return base.Channel.Declaration_GetAll();
        }
        
        public System.Threading.Tasks.Task<byte[]> Declaration_GetAllAsync() {
            return base.Channel.Declaration_GetAllAsync();
        }
        
        public byte[] Declaration_GetByCode(string p_Declaration_Code) {
            return base.Channel.Declaration_GetByCode(p_Declaration_Code);
        }
        
        public System.Threading.Tasks.Task<byte[]> Declaration_GetByCodeAsync(string p_Declaration_Code) {
            return base.Channel.Declaration_GetByCodeAsync(p_Declaration_Code);
        }
        
        public byte[] Declaration_GetByContract(decimal p_Contract_Id) {
            return base.Channel.Declaration_GetByContract(p_Contract_Id);
        }
        
        public System.Threading.Tasks.Task<byte[]> Declaration_GetByContractAsync(decimal p_Contract_Id) {
            return base.Channel.Declaration_GetByContractAsync(p_Contract_Id);
        }
        
        public bool Declaration_Delete(decimal p_Declaration_Id) {
            return base.Channel.Declaration_Delete(p_Declaration_Id);
        }
        
        public System.Threading.Tasks.Task<bool> Declaration_DeleteAsync(decimal p_Declaration_Id) {
            return base.Channel.Declaration_DeleteAsync(p_Declaration_Id);
        }
        
        public bool Declaration_Update_Status(decimal Declaration_Id, decimal Status, string Reason, string Approve_By) {
            return base.Channel.Declaration_Update_Status(Declaration_Id, Status, Reason, Approve_By);
        }
        
        public System.Threading.Tasks.Task<bool> Declaration_Update_StatusAsync(decimal Declaration_Id, decimal Status, string Reason, string Approve_By) {
            return base.Channel.Declaration_Update_StatusAsync(Declaration_Id, Status, Reason, Approve_By);
        }
        
        public decimal Declaration_Insert(
                    string Declaration_Code, 
                    decimal Contract_Id, 
                    string Contract_Code, 
                    decimal Type, 
                    decimal Declaration_Type, 
                    System.DateTime Register_Date, 
                    decimal Money_Type, 
                    decimal Total_Value, 
                    decimal WareHouse_Id, 
                    string WareHouse_Name, 
                    string WareHouse_Location, 
                    string Gate, 
                    decimal Receive_Number, 
                    decimal Receive_Year, 
                    decimal VanDon_Number, 
                    System.DateTime VanDon_Date, 
                    decimal Status, 
                    string Source, 
                    decimal Declaration_Refence_Id, 
                    string Declaration_Refence_Code, 
                    string Custom_Register, 
                    string CREATED_BY, 
                    System.DateTime CREATED_DATE) {
            return base.Channel.Declaration_Insert(Declaration_Code, Contract_Id, Contract_Code, Type, Declaration_Type, Register_Date, Money_Type, Total_Value, WareHouse_Id, WareHouse_Name, WareHouse_Location, Gate, Receive_Number, Receive_Year, VanDon_Number, VanDon_Date, Status, Source, Declaration_Refence_Id, Declaration_Refence_Code, Custom_Register, CREATED_BY, CREATED_DATE);
        }
        
        public System.Threading.Tasks.Task<decimal> Declaration_InsertAsync(
                    string Declaration_Code, 
                    decimal Contract_Id, 
                    string Contract_Code, 
                    decimal Type, 
                    decimal Declaration_Type, 
                    System.DateTime Register_Date, 
                    decimal Money_Type, 
                    decimal Total_Value, 
                    decimal WareHouse_Id, 
                    string WareHouse_Name, 
                    string WareHouse_Location, 
                    string Gate, 
                    decimal Receive_Number, 
                    decimal Receive_Year, 
                    decimal VanDon_Number, 
                    System.DateTime VanDon_Date, 
                    decimal Status, 
                    string Source, 
                    decimal Declaration_Refence_Id, 
                    string Declaration_Refence_Code, 
                    string Custom_Register, 
                    string CREATED_BY, 
                    System.DateTime CREATED_DATE) {
            return base.Channel.Declaration_InsertAsync(Declaration_Code, Contract_Id, Contract_Code, Type, Declaration_Type, Register_Date, Money_Type, Total_Value, WareHouse_Id, WareHouse_Name, WareHouse_Location, Gate, Receive_Number, Receive_Year, VanDon_Number, VanDon_Date, Status, Source, Declaration_Refence_Id, Declaration_Refence_Code, Custom_Register, CREATED_BY, CREATED_DATE);
        }
        
        public int Declaration_Update(
                    decimal Declaration_Id, 
                    decimal Declaration_Type, 
                    System.DateTime Register_Date, 
                    decimal Money_Type, 
                    decimal Total_Value, 
                    decimal WareHouse_Id, 
                    string WareHouse_Name, 
                    string WareHouse_Location, 
                    string Gate, 
                    decimal Receive_Number, 
                    decimal Receive_Year, 
                    decimal VanDon_Number, 
                    System.DateTime VanDon_Date, 
                    string Source, 
                    string Custom_Register, 
                    string MODIFIED_BY, 
                    System.DateTime MODIFIED_DATE, 
                    decimal Status) {
            return base.Channel.Declaration_Update(Declaration_Id, Declaration_Type, Register_Date, Money_Type, Total_Value, WareHouse_Id, WareHouse_Name, WareHouse_Location, Gate, Receive_Number, Receive_Year, VanDon_Number, VanDon_Date, Source, Custom_Register, MODIFIED_BY, MODIFIED_DATE, Status);
        }
        
        public System.Threading.Tasks.Task<int> Declaration_UpdateAsync(
                    decimal Declaration_Id, 
                    decimal Declaration_Type, 
                    System.DateTime Register_Date, 
                    decimal Money_Type, 
                    decimal Total_Value, 
                    decimal WareHouse_Id, 
                    string WareHouse_Name, 
                    string WareHouse_Location, 
                    string Gate, 
                    decimal Receive_Number, 
                    decimal Receive_Year, 
                    decimal VanDon_Number, 
                    System.DateTime VanDon_Date, 
                    string Source, 
                    string Custom_Register, 
                    string MODIFIED_BY, 
                    System.DateTime MODIFIED_DATE, 
                    decimal Status) {
            return base.Channel.Declaration_UpdateAsync(Declaration_Id, Declaration_Type, Register_Date, Money_Type, Total_Value, WareHouse_Id, WareHouse_Name, WareHouse_Location, Gate, Receive_Number, Receive_Year, VanDon_Number, VanDon_Date, Source, Custom_Register, MODIFIED_BY, MODIFIED_DATE, Status);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CW_Business.WareHoseService.DeclarationTableSearchResponse CW_Business.WareHoseService.CWContractService.DeclarationTableSearch(CW_Business.WareHoseService.DeclarationTableSearchRequest request) {
            return base.Channel.DeclarationTableSearch(request);
        }
        
        public byte[] DeclarationTableSearch(
                    string USER_ID, 
                    decimal USER_TYPE, 
                    string USER_NAME, 
                    string DECLARATION_CODE, 
                    string CONTRACT_CODE, 
                    string RECEIVE_NUMBER, 
                    string RECEIVE_YEAR, 
                    string SO_VAN_DON, 
                    int TYPE, 
                    int STATUS, 
                    string REGISTER_DATE, 
                    decimal WAREHOUSE_ID, 
                    string NGAY_VAN_DON, 
                    string DECLARATION_REFENCE_CODE, 
                    string p_order_by, 
                    int p_start, 
                    int p_end, 
                    ref int p_total) {
            CW_Business.WareHoseService.DeclarationTableSearchRequest inValue = new CW_Business.WareHoseService.DeclarationTableSearchRequest();
            inValue.USER_ID = USER_ID;
            inValue.USER_TYPE = USER_TYPE;
            inValue.USER_NAME = USER_NAME;
            inValue.DECLARATION_CODE = DECLARATION_CODE;
            inValue.CONTRACT_CODE = CONTRACT_CODE;
            inValue.RECEIVE_NUMBER = RECEIVE_NUMBER;
            inValue.RECEIVE_YEAR = RECEIVE_YEAR;
            inValue.SO_VAN_DON = SO_VAN_DON;
            inValue.TYPE = TYPE;
            inValue.STATUS = STATUS;
            inValue.REGISTER_DATE = REGISTER_DATE;
            inValue.WAREHOUSE_ID = WAREHOUSE_ID;
            inValue.NGAY_VAN_DON = NGAY_VAN_DON;
            inValue.DECLARATION_REFENCE_CODE = DECLARATION_REFENCE_CODE;
            inValue.p_order_by = p_order_by;
            inValue.p_start = p_start;
            inValue.p_end = p_end;
            inValue.p_total = p_total;
            CW_Business.WareHoseService.DeclarationTableSearchResponse retVal = ((CW_Business.WareHoseService.CWContractService)(this)).DeclarationTableSearch(inValue);
            p_total = retVal.p_total;
            return retVal.DeclarationTableSearchResult;
        }
        
        public System.Threading.Tasks.Task<CW_Business.WareHoseService.DeclarationTableSearchResponse> DeclarationTableSearchAsync(CW_Business.WareHoseService.DeclarationTableSearchRequest request) {
            return base.Channel.DeclarationTableSearchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CW_Business.WareHoseService.DeclarationLiquidationSearchResponse CW_Business.WareHoseService.CWContractService.DeclarationLiquidationSearch(CW_Business.WareHoseService.DeclarationLiquidationSearchRequest request) {
            return base.Channel.DeclarationLiquidationSearch(request);
        }
        
        public byte[] DeclarationLiquidationSearch(
                    string USER_ID, 
                    decimal USER_TYPE, 
                    string USER_NAME, 
                    string DECLARATION_CODE, 
                    string CONTRACT_CODE, 
                    string RECEIVE_NUMBER, 
                    string RECEIVE_YEAR, 
                    string SO_VAN_DON, 
                    int TYPE, 
                    int STATUS, 
                    string REGISTER_DATE, 
                    decimal WAREHOUSE_ID, 
                    string NGAY_VAN_DON, 
                    string DECLARATION_REFENCE_CODE, 
                    string p_order_by, 
                    int p_start, 
                    int p_end, 
                    ref int p_total) {
            CW_Business.WareHoseService.DeclarationLiquidationSearchRequest inValue = new CW_Business.WareHoseService.DeclarationLiquidationSearchRequest();
            inValue.USER_ID = USER_ID;
            inValue.USER_TYPE = USER_TYPE;
            inValue.USER_NAME = USER_NAME;
            inValue.DECLARATION_CODE = DECLARATION_CODE;
            inValue.CONTRACT_CODE = CONTRACT_CODE;
            inValue.RECEIVE_NUMBER = RECEIVE_NUMBER;
            inValue.RECEIVE_YEAR = RECEIVE_YEAR;
            inValue.SO_VAN_DON = SO_VAN_DON;
            inValue.TYPE = TYPE;
            inValue.STATUS = STATUS;
            inValue.REGISTER_DATE = REGISTER_DATE;
            inValue.WAREHOUSE_ID = WAREHOUSE_ID;
            inValue.NGAY_VAN_DON = NGAY_VAN_DON;
            inValue.DECLARATION_REFENCE_CODE = DECLARATION_REFENCE_CODE;
            inValue.p_order_by = p_order_by;
            inValue.p_start = p_start;
            inValue.p_end = p_end;
            inValue.p_total = p_total;
            CW_Business.WareHoseService.DeclarationLiquidationSearchResponse retVal = ((CW_Business.WareHoseService.CWContractService)(this)).DeclarationLiquidationSearch(inValue);
            p_total = retVal.p_total;
            return retVal.DeclarationLiquidationSearchResult;
        }
        
        public System.Threading.Tasks.Task<CW_Business.WareHoseService.DeclarationLiquidationSearchResponse> DeclarationLiquidationSearchAsync(CW_Business.WareHoseService.DeclarationLiquidationSearchRequest request) {
            return base.Channel.DeclarationLiquidationSearchAsync(request);
        }
        
        public byte[] DeclarationGetById(decimal p_id) {
            return base.Channel.DeclarationGetById(p_id);
        }
        
        public System.Threading.Tasks.Task<byte[]> DeclarationGetByIdAsync(decimal p_id) {
            return base.Channel.DeclarationGetByIdAsync(p_id);
        }
        
        public byte[] Contract_GetAll() {
            return base.Channel.Contract_GetAll();
        }
        
        public System.Threading.Tasks.Task<byte[]> Contract_GetAllAsync() {
            return base.Channel.Contract_GetAllAsync();
        }
        
        public byte[] Contract_GetByCode(string p_Contract_Code) {
            return base.Channel.Contract_GetByCode(p_Contract_Code);
        }
        
        public System.Threading.Tasks.Task<byte[]> Contract_GetByCodeAsync(string p_Contract_Code) {
            return base.Channel.Contract_GetByCodeAsync(p_Contract_Code);
        }
        
        public byte[] Contract_GetById(decimal p_Contract_Id) {
            return base.Channel.Contract_GetById(p_Contract_Id);
        }
        
        public System.Threading.Tasks.Task<byte[]> Contract_GetByIdAsync(decimal p_Contract_Id) {
            return base.Channel.Contract_GetByIdAsync(p_Contract_Id);
        }
        
        public byte[] Contract_GetBy_WareHouse(decimal WareHouse_Id) {
            return base.Channel.Contract_GetBy_WareHouse(WareHouse_Id);
        }
        
        public System.Threading.Tasks.Task<byte[]> Contract_GetBy_WareHouseAsync(decimal WareHouse_Id) {
            return base.Channel.Contract_GetBy_WareHouseAsync(WareHouse_Id);
        }
        
        public byte[] Contract_GetBy_User(string User_Name) {
            return base.Channel.Contract_GetBy_User(User_Name);
        }
        
        public System.Threading.Tasks.Task<byte[]> Contract_GetBy_UserAsync(string User_Name) {
            return base.Channel.Contract_GetBy_UserAsync(User_Name);
        }
        
        public decimal Contract_Delete(decimal p_Contract_Id) {
            return base.Channel.Contract_Delete(p_Contract_Id);
        }
        
        public System.Threading.Tasks.Task<decimal> Contract_DeleteAsync(decimal p_Contract_Id) {
            return base.Channel.Contract_DeleteAsync(p_Contract_Id);
        }
        
        public bool Contract_Update_Status(decimal Contract_Id, decimal Status, string Reason, string Approve_By) {
            return base.Channel.Contract_Update_Status(Contract_Id, Status, Reason, Approve_By);
        }
        
        public System.Threading.Tasks.Task<bool> Contract_Update_StatusAsync(decimal Contract_Id, decimal Status, string Reason, string Approve_By) {
            return base.Channel.Contract_Update_StatusAsync(Contract_Id, Status, Reason, Approve_By);
        }
        
        public bool Contract_Insert(string CONTRACT_CODE, System.DateTime REGISTER_DATE, decimal PERIOD, decimal RECEIVE_YEAR, decimal WAREHOUSE_ID, string WAREHOUSE_NAME, decimal BUSINESS_ID, decimal MONEY_TYPE, decimal STATUS, string CREATED_BY, System.DateTime CREATED_DATE, System.DateTime DUE_DATE) {
            return base.Channel.Contract_Insert(CONTRACT_CODE, REGISTER_DATE, PERIOD, RECEIVE_YEAR, WAREHOUSE_ID, WAREHOUSE_NAME, BUSINESS_ID, MONEY_TYPE, STATUS, CREATED_BY, CREATED_DATE, DUE_DATE);
        }
        
        public System.Threading.Tasks.Task<bool> Contract_InsertAsync(string CONTRACT_CODE, System.DateTime REGISTER_DATE, decimal PERIOD, decimal RECEIVE_YEAR, decimal WAREHOUSE_ID, string WAREHOUSE_NAME, decimal BUSINESS_ID, decimal MONEY_TYPE, decimal STATUS, string CREATED_BY, System.DateTime CREATED_DATE, System.DateTime DUE_DATE) {
            return base.Channel.Contract_InsertAsync(CONTRACT_CODE, REGISTER_DATE, PERIOD, RECEIVE_YEAR, WAREHOUSE_ID, WAREHOUSE_NAME, BUSINESS_ID, MONEY_TYPE, STATUS, CREATED_BY, CREATED_DATE, DUE_DATE);
        }
        
        public bool Contract_Update(decimal CONTRACT_ID, System.DateTime REGISTER_DATE, decimal PERIOD, decimal RECEIVE_YEAR, decimal WAREHOUSE_ID, string WAREHOUSE_NAME, decimal BUSINESS_ID, decimal MONEY_TYPE, string MODIFIED_BY, System.DateTime MODIFIED_DATE, decimal STATUS, System.DateTime DUE_DATE) {
            return base.Channel.Contract_Update(CONTRACT_ID, REGISTER_DATE, PERIOD, RECEIVE_YEAR, WAREHOUSE_ID, WAREHOUSE_NAME, BUSINESS_ID, MONEY_TYPE, MODIFIED_BY, MODIFIED_DATE, STATUS, DUE_DATE);
        }
        
        public System.Threading.Tasks.Task<bool> Contract_UpdateAsync(decimal CONTRACT_ID, System.DateTime REGISTER_DATE, decimal PERIOD, decimal RECEIVE_YEAR, decimal WAREHOUSE_ID, string WAREHOUSE_NAME, decimal BUSINESS_ID, decimal MONEY_TYPE, string MODIFIED_BY, System.DateTime MODIFIED_DATE, decimal STATUS, System.DateTime DUE_DATE) {
            return base.Channel.Contract_UpdateAsync(CONTRACT_ID, REGISTER_DATE, PERIOD, RECEIVE_YEAR, WAREHOUSE_ID, WAREHOUSE_NAME, BUSINESS_ID, MONEY_TYPE, MODIFIED_BY, MODIFIED_DATE, STATUS, DUE_DATE);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CW_Business.WareHoseService.TableSearchResponse CW_Business.WareHoseService.CWContractService.TableSearch(CW_Business.WareHoseService.TableSearchRequest request) {
            return base.Channel.TableSearch(request);
        }
        
        public byte[] TableSearch(string CONTRACT_CODE, System.DateTime FR0MDATE, int STATUS, decimal User_Type, string User_Id, string Created_By, decimal Receive_Number, decimal Receive_Year, decimal WareHouse_Id, decimal Business_Id, string p_order_by, int p_start, int p_end, ref int p_total) {
            CW_Business.WareHoseService.TableSearchRequest inValue = new CW_Business.WareHoseService.TableSearchRequest();
            inValue.CONTRACT_CODE = CONTRACT_CODE;
            inValue.FR0MDATE = FR0MDATE;
            inValue.STATUS = STATUS;
            inValue.User_Type = User_Type;
            inValue.User_Id = User_Id;
            inValue.Created_By = Created_By;
            inValue.Receive_Number = Receive_Number;
            inValue.Receive_Year = Receive_Year;
            inValue.WareHouse_Id = WareHouse_Id;
            inValue.Business_Id = Business_Id;
            inValue.p_order_by = p_order_by;
            inValue.p_start = p_start;
            inValue.p_end = p_end;
            inValue.p_total = p_total;
            CW_Business.WareHoseService.TableSearchResponse retVal = ((CW_Business.WareHoseService.CWContractService)(this)).TableSearch(inValue);
            p_total = retVal.p_total;
            return retVal.TableSearchResult;
        }
        
        public System.Threading.Tasks.Task<CW_Business.WareHoseService.TableSearchResponse> TableSearchAsync(CW_Business.WareHoseService.TableSearchRequest request) {
            return base.Channel.TableSearchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CW_Business.WareHoseService.Contract_Search_ThanhKhoanResponse CW_Business.WareHoseService.CWContractService.Contract_Search_ThanhKhoan(CW_Business.WareHoseService.Contract_Search_ThanhKhoanRequest request) {
            return base.Channel.Contract_Search_ThanhKhoan(request);
        }
        
        public byte[] Contract_Search_ThanhKhoan(string CONTRACT_CODE, System.DateTime FR0MDATE, int STATUS, decimal User_Type, string User_Id, string Created_By, decimal Receive_Number, decimal Receive_Year, decimal WareHouse_Id, decimal Business_Id, string p_order_by, int p_start, int p_end, ref int p_total) {
            CW_Business.WareHoseService.Contract_Search_ThanhKhoanRequest inValue = new CW_Business.WareHoseService.Contract_Search_ThanhKhoanRequest();
            inValue.CONTRACT_CODE = CONTRACT_CODE;
            inValue.FR0MDATE = FR0MDATE;
            inValue.STATUS = STATUS;
            inValue.User_Type = User_Type;
            inValue.User_Id = User_Id;
            inValue.Created_By = Created_By;
            inValue.Receive_Number = Receive_Number;
            inValue.Receive_Year = Receive_Year;
            inValue.WareHouse_Id = WareHouse_Id;
            inValue.Business_Id = Business_Id;
            inValue.p_order_by = p_order_by;
            inValue.p_start = p_start;
            inValue.p_end = p_end;
            inValue.p_total = p_total;
            CW_Business.WareHoseService.Contract_Search_ThanhKhoanResponse retVal = ((CW_Business.WareHoseService.CWContractService)(this)).Contract_Search_ThanhKhoan(inValue);
            p_total = retVal.p_total;
            return retVal.Contract_Search_ThanhKhoanResult;
        }
        
        public System.Threading.Tasks.Task<CW_Business.WareHoseService.Contract_Search_ThanhKhoanResponse> Contract_Search_ThanhKhoanAsync(CW_Business.WareHoseService.Contract_Search_ThanhKhoanRequest request) {
            return base.Channel.Contract_Search_ThanhKhoanAsync(request);
        }
        
        public byte[] Contract_GetByStatus(int p_status) {
            return base.Channel.Contract_GetByStatus(p_status);
        }
        
        public System.Threading.Tasks.Task<byte[]> Contract_GetByStatusAsync(int p_status) {
            return base.Channel.Contract_GetByStatusAsync(p_status);
        }
        
        public byte[] Allcode_GetAll() {
            return base.Channel.Allcode_GetAll();
        }
        
        public System.Threading.Tasks.Task<byte[]> Allcode_GetAllAsync() {
            return base.Channel.Allcode_GetAllAsync();
        }
        
        public string AllCode_CheckWCF() {
            return base.Channel.AllCode_CheckWCF();
        }
        
        public System.Threading.Tasks.Task<string> AllCode_CheckWCFAsync() {
            return base.Channel.AllCode_CheckWCFAsync();
        }
        
        public System.DateTime Get_Current_Date() {
            return base.Channel.Get_Current_Date();
        }
        
        public System.Threading.Tasks.Task<System.DateTime> Get_Current_DateAsync() {
            return base.Channel.Get_Current_DateAsync();
        }
        
        public byte[] Get_TonKho(decimal p_warehouse_id) {
            return base.Channel.Get_TonKho(p_warehouse_id);
        }
        
        public System.Threading.Tasks.Task<byte[]> Get_TonKhoAsync(decimal p_warehouse_id) {
            return base.Channel.Get_TonKhoAsync(p_warehouse_id);
        }
        
        public byte[] WAREHOUSE_GET_ALL() {
            return base.Channel.WAREHOUSE_GET_ALL();
        }
        
        public System.Threading.Tasks.Task<byte[]> WAREHOUSE_GET_ALLAsync() {
            return base.Channel.WAREHOUSE_GET_ALLAsync();
        }
        
        public byte[] WareHouse_GetById(decimal WareHouse_Id) {
            return base.Channel.WareHouse_GetById(WareHouse_Id);
        }
        
        public System.Threading.Tasks.Task<byte[]> WareHouse_GetByIdAsync(decimal WareHouse_Id) {
            return base.Channel.WareHouse_GetByIdAsync(WareHouse_Id);
        }
        
        public byte[] WareHouse_GetByUser(decimal User_Id, decimal User_Type) {
            return base.Channel.WareHouse_GetByUser(User_Id, User_Type);
        }
        
        public System.Threading.Tasks.Task<byte[]> WareHouse_GetByUserAsync(decimal User_Id, decimal User_Type) {
            return base.Channel.WareHouse_GetByUserAsync(User_Id, User_Type);
        }
    }
}
