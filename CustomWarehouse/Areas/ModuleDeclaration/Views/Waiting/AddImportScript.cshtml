 <script>
     $('#Contract_Id').multipleSelect({
         width: '90%', filter: true, single: true
     });
     $('#WareHouse_Id').multipleSelect({
         width: '90%', filter: true, single: true
     });
     $('#PRODUC_ID').multipleSelect({
         width: '90%', filter: true, single: true
     });

     function ImportFile() {
         try {
             var pfile = $("#_fileImport");//lay du lieu file
             if (pfile.val() == "") {
                 _CheckFile = false;
                 jAlert("Cảnh báo", "Chưa chọn file import!", function () {
                     $("#_fileImport").focus();
                 });
                 return false;
             }
             var _CheckFile = true;
             var _Len = pfile[0].files[0].name.toString()
             if (_Len.length > 200) {
                 _CheckFile = false;
                 jAlert("Cảnh báo", "Tên file không được quá 200 ký tự", function () {
                     $("#_fileImport").focus();
                 });
                 return false;
             }
             var _filecontract = pfile[0].files[0];
             var _size = _filecontract.size / 1024 / 1024;
             if (_size > 10) {
                 _CheckFile = false;
                 jAlert("Cảnh báo", "File tải lên không quá 10MB !", function () {
                     $("#_fileImport").focus();
                 });
                 $("#_fileImport").focus();
                 return false;
             }
             var _check_kyTu = CheckKyTuDacBietShoKyTu(_filecontract.name);
             if (_check_kyTu != "") {
                 _CheckFile = false;
                 jAlert("Cảnh báo", "Không tải file có tên file chứa các ký tự | , } { @@ + & = ! ? ; / # \ \" $ % ^ * ( ) < > ` ~ [ ] \\", function () {
                     $("#_fileImport").focus();
                 });
                 return false;
             }
             if (FuncCheckUnikey(_filecontract.name) == -1) {
                 _CheckFile = false;
                 jAlert("Cảnh báo", "Không tải file có tên file được lưu là unicode Tiếng việt có dấu!", function () {
                     $("#_fileImport").focus();
                 });
                 return false;
             }
             var check = validateExtension4FileXLS(_filecontract.name.toString());
             if (check == 0) {
                 d_mess_UploadUyquyen.html("File tải lên không đúng định dạng, bạn chỉ có thể chọn excel để import!");
                 $("#_fileImport").focus();
                 return false;
             }
             if (_CheckFile == false) {
                 return false;
             }
             var formData = new FormData();// tao ra 1 form data de truyen dữ liệu thông qua nó
             formData.append("uploadFile", pfile[0].files[0]);
             $.ajax({
                 type: 'POST',
                 url: '/ModuleDeclaration/Waiting/Products_ImportFile/',
                 data: formData,
                 enctype: 'multipart/form-data',
                 processData: false,
                 contentType: false,
                 dataType: "html",
                 async: true, cache: false, traditional: true,
                 success: function (data) {
                     pfile.val("");
                     if (data != null && data != "") {
                         $("#_tableProduct").append(data);
                     }
                     else {
                         jAlert("Cảnh báo", "File import không đúng định dạng, kiểm tra lại mã sản phẩm và định dạng số liệu nhập", function () {
                             $("#_fileImport").focus();
                         });
                     }                     
                 }
             });
         } catch (e) {
             alert(e);
             return false;
         }
     }


     function ShowAddProduct() {
         try {
             if (CheckSessionTimeOut() == false) {
                 return false;
             }
             $('#txt_sokien').val("");
             $('#txt_soluong').val("");
             $("#cbo_product").val("");
             $("#_txt_product_id").val("");
             $("#txt_so_kien_ton_kho").val("");
             $("#txt_so_luong_ton_kho").val("");
             $("#_txt_product_code").val("");
             $('#txt_value').val("");
             $('#PRODUC_ID').val("");
             $('#txt_madein').val("");;
             $('#PRODUC_ID').multipleSelect({
                 width: '90%', filter: true, single: true
             });
             ShowPopupDialog('divWrapperProduct', 'Thêm sản phẩm', 600, 750, '');
             $("#btnExitPopups img").attr("src", '../../../../Content/images/delete.png');
         } catch (e) {
             alert(e.message);
         }
     }


     function Addproduct()
     {
         try {
             var d_messproduct = $('#d_messproductSub');
             d_messproduct.html("");
             var PRODUC_ID = $('#PRODUC_ID');
             var txt_sokien = $('#txt_sokien');
             var txt_soluong = $('#txt_soluong');
             var txt_madein = $('#txt_madein');
             var txt_value = $('#txt_value');
             if (PRODUC_ID.val() == "" || PRODUC_ID.val() == null)
             {
                 d_messproduct.html("Bạn chưa chọn sản phẩm");
                 PRODUC_ID.multipleSelect("focus");
                 return false;
             }
             var _check = true;
             $('.tdproduct').each(function (i, item) {
                 if ($(item).text().trim() == PRODUC_ID.val()) {
                     _check = false;
                 }
             });
             if (_check == false) {
                 d_messproduct.html("Sản phẩm đã được thêm");
                 PRODUC_ID.multipleSelect("focus");
                 return false;
             }
             if (txt_sokien.val().trim() == "") {
                 d_messproduct.html("Số kiện không được bỏ trống");
                 txt_sokien.focus();
                 return false;
             }
             if (txt_soluong.val().trim() == "") {
                 d_messproduct.html("Số lượng không được bỏ trống");
                 txt_soluong.focus();
                 return false;
             }
             if (txt_madein.val().trim() == "") {
                 d_messproduct.html("Xuất xứ không được bỏ trống");
                 txt_madein.focus();
                 return false;
             }
             if (txt_value.val().trim() == "") {
                 d_messproduct.html("Giá trị không được bỏ trống");
                 txt_value.focus();
                 return false;
             }

             var bodyTable = "  <tr class='tbColorRows' id='" + PRODUC_ID.val() + "'>" +
                    "<td style='display:none' class='tdproduct' >" + PRODUC_ID.val() + "</td>" +
                    "<td style='display:none' >" + txt_sokien.val() + "</td>" +
                    "<td style='display:none' >" + txt_soluong.val() + "</td>" +
                    "<td style='display:none' >" + txt_madein.val() + "</td>" +
                    "<td style='display:none' >" + txt_value.val() + "</td>" +
                    "<td class='tdLeftAlign PRODUCT_CODE' >" + $("#PRODUC_ID option:selected").text() + "</td>" +
                    "<td class='tdCenterAlign'> " + txt_sokien.val() + "</td>" +
                    "<td class='tdCenterAlign'>" + txt_soluong.val() + "</td>" +
                    "<td class='tdLeftAlign MADEIN' >" + txt_madein.val() + "</td>" +
                    "<td class='tdCenterAlign' >" + txt_value.val() + "</td>" +
                    "<td class='clssCenter tdaction'>" + "<a  href='javascipt:;' onclick=\"return DelItem('" + PRODUC_ID.val() + "')\"> xóa </a>" +
                    "</td> </tr>";
             $("#_tableProduct").append(bodyTable);
             CloseDivAllStock('divWrapperProduct')
         } catch (e) {
             alert(e);
         }
     }

     function DelItem(pIdtag) {
         try {
             var d_messproduct = $('#d_messproduct');
             d_messproduct.html("");
             MessageBoxConfirm("Cảnh báo", "Bạn có chắc chắn muốn xóa sản phẩm này không?", function () {
                 var TagRemove = "#" + pIdtag.trim();
                 $(TagRemove).remove();
                 return true;
             }, function () {
                 return false;
             });
         } catch (e) {
             return false;
         }
         return true;
     }

     function FuncAddDelaration()
     {
         try {
             var d_messAdd = $('#d_messAdd');
             d_messAdd.html("");
             var d_messproduct = $('#d_messproduct');
             d_messproduct.html("");
             var Declaration_Code = $('#Declaration_Code');
             var Contract_Id = $('#Contract_Id');
             var Register_Date = $('#Register_Date');
             var Total_Value = $('#Total_Value');
             var WareHouse_Id = $('#WareHouse_Id');
             var Gate = $('#Gate');
             //var Receive_Number = $('#Receive_Number');
             var Receive_Year = $('#Receive_Year');
             var VANDON_NUMBER = $('#VANDON_NUMBER');
             var VANDON_DATE = $('#VANDON_DATE');
             var Gate = $('#Gate');
             var Source = $('#Source');
             var Custom_Register = $('#Custom_Register');
             var Declaration_Type = $('#Declaration_Type');
             if (Declaration_Code.val().trim() == "")
             {
                 d_messAdd.html("Số tờ khai không được bỏ trống");
                 Declaration_Code.val("");
                 Declaration_Code.focus();
                 return false;
             }
             if (Contract_Id.val().trim() == "") {
                 d_messAdd.html("Hợp đồng không được bỏ trống");
                 Contract_Id.multipleSelect("focus");
                 return false;
             }
             if (Register_Date.val().trim() == "")
             {
                 d_messAdd.html("Ngày đăng ký không được bỏ trống");
                 Register_Date.val("");
                 Register_Date.focus();
                 return false;
             }
             if (isDate_ddMMyyyy(Register_Date.val()) == false) {
                 d_messAdd.html("Ngày đăng ký không hợp lệ, định dạng ngày tháng là dd/mm/yyyy!");
                 Register_Date.focus();
                 return false;
             }
             if (Total_Value.val().trim() == "") {
                 d_messAdd.html("Tổng giá trị được bỏ trống");
                 Total_Value.val("");
                 Total_Value.focus();
                 return false;
             }
             if (WareHouse_Id.val().trim() == "") {
                 d_messAdd.html("Kho không được bỏ trống");
                 WareHouse_Id.multipleSelect("focus");
                 return false;
             }
             //if (Receive_Number.val().trim() == "") {
             //    d_messAdd.html("Số tiếp  nhận không được bỏ trống");
             //    Receive_Number.val("");
             //    Receive_Number.focus();
             //    return false;
             //}
             if (Receive_Year.val().trim() == "") {
                 d_messAdd.html("Năm tiếp nhận không được bỏ trống");
                 Receive_Year.val("");
                 Receive_Year.focus();
                 return false;
             }
             if (VANDON_NUMBER.val().trim() == "") {
                 d_messAdd.html("Số vận đơn không được bỏ trống");
                 VANDON_NUMBER.val("");
                 VANDON_NUMBER.focus();
                 return false;
             }
             if (VANDON_DATE.val().trim() == "") {
                 d_messAdd.html("Ngày vận đơn không được bỏ trống");
                 VANDON_DATE.val("");
                 VANDON_DATE.focus();
                 return false;
             }
             if (isDate_ddMMyyyy(VANDON_DATE.val()) == false) {
                 d_messAdd.html("Ngày vận đơn không hợp lệ, định dạng ngày tháng là dd/mm/yyyy!");
                 VANDON_DATE.focus();
                 return false;
             }
             var formData = new FormData();
             formData.append("Declaration_Code", Declaration_Code.val());
             formData.append("Contract_Id", Contract_Id.val());
             formData.append("Contract_Code", $("#Contract_Id option:selected").text());
             formData.append("Register_Date", Register_Date.val());
             formData.append("Total_Value", Total_Value.val());
             formData.append("WareHouse_Id", WareHouse_Id.val());
             formData.append("WareHouse_Name", $("#WareHouse_Id option:selected").text());
             formData.append("Gate", Gate.val());
             formData.append("Receive_Number", -1);
             formData.append("Receive_Year", Receive_Year.val());
             formData.append("VANDON_NUMBER", VANDON_NUMBER.val());
             formData.append("VANDON_DATE", VANDON_DATE.val());
             formData.append("Source", Source.val());
             formData.append("Custom_Register", Custom_Register.val());
             formData.append("Declaration_Type", Declaration_Type.val());
             // lưu những sản phẩm dạng iD1,TYPE|id2,TYPE
             var _listProduct = "";
             var _arr_pruduct = [];
           
             var oTable = document.getElementById('_tableProduct');
             var _checkExitsProduct = 1;
             if (oTable != null) {
                 var rowLength = oTable.rows.length;
                 if (rowLength > 1) {
                     for (i = 1; i < rowLength; i++) { //chay tu 1 bo row dau tien la header 
                         var oCells = oTable.rows.item(i).cells;
                         // check xem đã trùng thằng sản phẩm nào chưa
                         if (Checkcontains(_arr_pruduct, oCells.item(0).innerHTML.trim()) == false)
                         {
                             _checkExitsProduct = -1;
                         }
                         _arr_pruduct[i - 1] = oCells.item(0).innerHTML.trim();
                         _listProduct += "|" + oCells.item(0).innerHTML.trim() + "," + oCells.item(1).innerHTML.trim().replace(/,/g, '').trim() + ","
                             + oCells.item(2).innerHTML.trim().replace(/,/g, '').trim() + "," + oCells.item(3).innerHTML.trim().replace(/,/g, '').trim() + "," + oCells.item(4).innerHTML.replace(/,/g, '').trim() + "|";
                     }
                 }
                 else
                 {
                     d_messproduct.html("Bạn chưa chọn sản phẩm nào");
                     $("#PRODUC_ID").multipleSelect("focus");
                     return false;
                 }
             }
             if (_checkExitsProduct == -1) {
                 d_messAdd.html("Sản phẩm bị trùng, vui lòng kiểm tra lại!");
                 return false;
             }
             formData.append("STR_LIST_PRODUCTS", _listProduct);        
             $.ajax({
                 type: 'POST',
                 url: '/ModuleDeclaration/Waiting/SaveDeralation',
                 data: formData,
                 enctype: 'multipart/form-data',
                 processData: false,
                 contentType: false,
                 dataType: "json",
                 async: true, cache: false, traditional: true,
                 success: function (data) {
                     if (data.success > 0) {
                         jAlert("Thông báo", "Cập nhật dữ liệu thành công!", function () {
                             location.reload();
                         });
                     }
                     else if (data.success == -2) {
                         jAlert("Thông báo", "Dữ liệu bản ghi đã tồn tại trong hệ thống!");
                         return false;
                     }
                     else if (data.success < 0) {
                         jAlert("Thông báo", "Có lỗi trong quá trình cập nhật dữ liệu!");
                         return false;
                     }
                 }
             });
         } catch (e) {
             alert(e);
         }

         function Checkcontains(a, obj) {
             var i = a.length;
             while (i--) {
                 if (a[i] == obj) {
                     return false;
                 }
             }
             return true;
         }
     }

 </script>